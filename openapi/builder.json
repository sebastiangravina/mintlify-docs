{
  "openapi": "3.0.3",
  "info": {
    "title": "Builder API",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://release0.com/api"
    }
  ],
  "externalDocs": {
    "url": "https://docs.release0.com/api-reference"
  },
  "paths": {
    "/v1/agents/{agentId}/linkedAgents": {
      "get": {
        "operationId": "getLinkedAgents",
        "summary": "Get linked agents",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agents": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string",
                                "enum": [
                                  "3",
                                  "4",
                                  "5"
                                ]
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "title": {
                                      "type": "string"
                                    },
                                    "graphCoordinates": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "type": "number"
                                        },
                                        "y": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "x",
                                        "y"
                                      ]
                                    },
                                    "blocks": {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "start"
                                                ]
                                              },
                                              "label": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type",
                                              "label"
                                            ]
                                          },
                                          {
                                            "oneOf": [
                                              {
                                                "$ref": "#/components/schemas/textBlock"
                                              },
                                              {
                                                "$ref": "#/components/schemas/imageBlock"
                                              },
                                              {
                                                "$ref": "#/components/schemas/videoBlock"
                                              },
                                              {
                                                "$ref": "#/components/schemas/embedBlock"
                                              },
                                              {
                                                "$ref": "#/components/schemas/audioBlock"
                                              }
                                            ],
                                            "discriminator": {
                                              "propertyName": "type",
                                              "mapping": {
                                                "text": "#/components/schemas/textBlock",
                                                "image": "#/components/schemas/imageBlock",
                                                "video": "#/components/schemas/videoBlock",
                                                "embed": "#/components/schemas/embedBlock",
                                                "audio": "#/components/schemas/audioBlock"
                                              }
                                            }
                                          },
                                          {
                                            "oneOf": [
                                              {
                                                "$ref": "#/components/schemas/textInput"
                                              },
                                              {
                                                "$ref": "#/components/schemas/email"
                                              },
                                              {
                                                "$ref": "#/components/schemas/address"
                                              },
                                              {
                                                "$ref": "#/components/schemas/autocomplete"
                                              },
                                              {
                                                "$ref": "#/components/schemas/numberInput"
                                              },
                                              {
                                                "$ref": "#/components/schemas/url"
                                              },
                                              {
                                                "$ref": "#/components/schemas/phoneNumberInput"
                                              },
                                              {
                                                "$ref": "#/components/schemas/dateInput"
                                              },
                                              {
                                                "$ref": "#/components/schemas/paymentInput"
                                              },
                                              {
                                                "$ref": "#/components/schemas/rating"
                                              },
                                              {
                                                "$ref": "#/components/schemas/buttonsInputV5"
                                              },
                                              {
                                                "$ref": "#/components/schemas/fileInputV5"
                                              },
                                              {
                                                "$ref": "#/components/schemas/pictureChoiceV5"
                                              }
                                            ],
                                            "discriminator": {
                                              "propertyName": "type",
                                              "mapping": {
                                                "text input": "#/components/schemas/textInput",
                                                "email input": "#/components/schemas/email",
                                                "address input": "#/components/schemas/address",
                                                "autocomplete input": "#/components/schemas/autocomplete",
                                                "number input": "#/components/schemas/numberInput",
                                                "url input": "#/components/schemas/url",
                                                "phone number input": "#/components/schemas/phoneNumberInput",
                                                "date input": "#/components/schemas/dateInput",
                                                "payment input": "#/components/schemas/paymentInput",
                                                "rating input": "#/components/schemas/rating",
                                                "choice input": "#/components/schemas/buttonsInputV5",
                                                "file input": "#/components/schemas/fileInputV5",
                                                "image choice": "#/components/schemas/pictureChoiceV5"
                                              }
                                            }
                                          },
                                          {
                                            "oneOf": [
                                              {
                                                "$ref": "#/components/schemas/scriptLogic"
                                              },
                                              {
                                                "$ref": "#/components/schemas/redirectLogic"
                                              },
                                              {
                                                "$ref": "#/components/schemas/setVariableLogic"
                                              },
                                              {
                                                "$ref": "#/components/schemas/AgentLinkLogic"
                                              },
                                              {
                                                "$ref": "#/components/schemas/waitLogic"
                                              },
                                              {
                                                "$ref": "#/components/schemas/jumpLogic"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "outgoingEdgeId": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Condition"
                                                    ]
                                                  },
                                                  "items": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "blockId": {
                                                          "type": "string"
                                                        },
                                                        "outgoingEdgeId": {
                                                          "type": "string"
                                                        },
                                                        "content": {
                                                          "type": "object",
                                                          "properties": {
                                                            "logicalOperator": {
                                                              "type": "string",
                                                              "enum": [
                                                                "OR",
                                                                "AND"
                                                              ]
                                                            },
                                                            "comparisons": {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "id": {
                                                                    "type": "string"
                                                                  },
                                                                  "variableId": {
                                                                    "type": "string"
                                                                  },
                                                                  "comparisonOperator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                      "Equal to",
                                                                      "Not equal",
                                                                      "Contains",
                                                                      "Does not contain",
                                                                      "Greater than",
                                                                      "Greater or equal to",
                                                                      "Less than",
                                                                      "Less or equal to",
                                                                      "Is set",
                                                                      "Is empty",
                                                                      "Starts with",
                                                                      "Ends with",
                                                                      "Matches regex",
                                                                      "Does not match regex"
                                                                    ]
                                                                  },
                                                                  "value": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "id"
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "type",
                                                  "items"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "outgoingEdgeId": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "AB test"
                                                    ]
                                                  },
                                                  "items": {
                                                    "type": "array",
                                                    "maxItems": 2,
                                                    "minItems": 2,
                                                    "items": {
                                                      "oneOf": [
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "blockId": {
                                                              "type": "string"
                                                            },
                                                            "outgoingEdgeId": {
                                                              "type": "string"
                                                            },
                                                            "path": {
                                                              "type": "string",
                                                              "enum": [
                                                                "a"
                                                              ]
                                                            }
                                                          },
                                                          "required": [
                                                            "id",
                                                            "path"
                                                          ]
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "blockId": {
                                                              "type": "string"
                                                            },
                                                            "outgoingEdgeId": {
                                                              "type": "string"
                                                            },
                                                            "path": {
                                                              "type": "string",
                                                              "enum": [
                                                                "b"
                                                              ]
                                                            }
                                                          },
                                                          "required": [
                                                            "id",
                                                            "path"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "options": {
                                                    "type": "object",
                                                    "properties": {
                                                      "aPercent": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "maximum": 100
                                                      }
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "type",
                                                  "items"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "oneOf": [
                                              {
                                                "$ref": "#/components/schemas/chatwootBlock"
                                              },
                                              {
                                                "$ref": "#/components/schemas/googleAnalyticsBlock"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "outgoingEdgeId": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "OpenAI"
                                                    ]
                                                  },
                                                  "options": {
                                                    "oneOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "credentialsId": {
                                                            "type": "string"
                                                          },
                                                          "baseUrl": {
                                                            "type": "string"
                                                          },
                                                          "apiVersion": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "task": {
                                                            "type": "string",
                                                            "enum": [
                                                              "Create chat completion"
                                                            ]
                                                          },
                                                          "model": {
                                                            "type": "string"
                                                          },
                                                          "messages": {
                                                            "type": "array",
                                                            "items": {
                                                              "anyOf": [
                                                                {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "id": {
                                                                      "type": "string"
                                                                    },
                                                                    "role": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "system",
                                                                        "user",
                                                                        "assistant"
                                                                      ]
                                                                    },
                                                                    "content": {
                                                                      "type": "string"
                                                                    },
                                                                    "name": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "id"
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "id": {
                                                                      "type": "string"
                                                                    },
                                                                    "role": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "Messages sequence ✨"
                                                                      ]
                                                                    },
                                                                    "content": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                        "assistantMessagesVariableId": {
                                                                          "type": "string"
                                                                        },
                                                                        "userMessagesVariableId": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "id",
                                                                    "role"
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "id": {
                                                                      "type": "string"
                                                                    },
                                                                    "role": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "Dialogue"
                                                                      ]
                                                                    },
                                                                    "dialogueVariableId": {
                                                                      "type": "string"
                                                                    },
                                                                    "startsBy": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "user",
                                                                        "assistant"
                                                                      ]
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "id",
                                                                    "role"
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          "advancedSettings": {
                                                            "type": "object",
                                                            "properties": {
                                                              "temperature": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "number"
                                                                  },
                                                                  {}
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "responseMapping": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "valueToExtract": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Message content",
                                                                    "Total tokens"
                                                                  ]
                                                                },
                                                                "variableId": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id",
                                                                "valueToExtract"
                                                              ]
                                                            }
                                                          },
                                                          "credentialsId": {
                                                            "type": "string"
                                                          },
                                                          "baseUrl": {
                                                            "type": "string"
                                                          },
                                                          "apiVersion": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "task"
                                                        ]
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "task": {
                                                            "type": "string",
                                                            "enum": [
                                                              "Create image"
                                                            ]
                                                          },
                                                          "prompt": {
                                                            "type": "string"
                                                          },
                                                          "advancedOptions": {
                                                            "type": "object",
                                                            "properties": {
                                                              "size": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "256x256",
                                                                  "512x512",
                                                                  "1024x1024"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "responseMapping": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "valueToExtract": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Image URL"
                                                                  ]
                                                                },
                                                                "variableId": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id",
                                                                "valueToExtract"
                                                              ]
                                                            }
                                                          },
                                                          "credentialsId": {
                                                            "type": "string"
                                                          },
                                                          "baseUrl": {
                                                            "type": "string"
                                                          },
                                                          "apiVersion": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "task",
                                                          "advancedOptions",
                                                          "responseMapping"
                                                        ]
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "credentialsId": {
                                                            "type": "string"
                                                          },
                                                          "baseUrl": {
                                                            "type": "string"
                                                          },
                                                          "apiVersion": {
                                                            "type": "string"
                                                          },
                                                          "task": {
                                                            "type": "string",
                                                            "enum": [
                                                              "Create speech"
                                                            ]
                                                          },
                                                          "model": {
                                                            "type": "string"
                                                          },
                                                          "input": {
                                                            "type": "string"
                                                          },
                                                          "voice": {
                                                            "type": "string",
                                                            "enum": [
                                                              "alloy",
                                                              "echo",
                                                              "fable",
                                                              "onyx",
                                                              "nova",
                                                              "shimmer"
                                                            ]
                                                          },
                                                          "saveUrlInVariableId": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "task"
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "type"
                                                ]
                                              },
                                              {
                                                "$ref": "#/components/schemas/sendEmailBlock"
                                              },
                                              {
                                                "$ref": "#/components/schemas/pixelBlock"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "outgoingEdgeId": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Google Sheets"
                                                    ]
                                                  },
                                                  "options": {
                                                    "oneOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "credentialsId": {
                                                            "type": "string"
                                                          },
                                                          "sheetId": {
                                                            "type": "string"
                                                          },
                                                          "spreadsheetId": {
                                                            "type": "string"
                                                          },
                                                          "action": {
                                                            "type": "string",
                                                            "enum": [
                                                              "Get data from sheet"
                                                            ]
                                                          },
                                                          "referenceCell": {
                                                            "type": "object",
                                                            "properties": {
                                                              "column": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              },
                                                              "id": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "id"
                                                            ]
                                                          },
                                                          "filter": {
                                                            "type": "object",
                                                            "properties": {
                                                              "comparisons": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "id": {
                                                                      "type": "string"
                                                                    },
                                                                    "column": {
                                                                      "type": "string"
                                                                    },
                                                                    "comparisonOperator": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "Equal to",
                                                                        "Not equal",
                                                                        "Contains",
                                                                        "Does not contain",
                                                                        "Greater than",
                                                                        "Greater or equal to",
                                                                        "Less than",
                                                                        "Less or equal to",
                                                                        "Is set",
                                                                        "Is empty",
                                                                        "Starts with",
                                                                        "Ends with",
                                                                        "Matches regex",
                                                                        "Does not match regex"
                                                                      ]
                                                                    },
                                                                    "value": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "id"
                                                                  ]
                                                                }
                                                              },
                                                              "logicalOperator": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "OR",
                                                                  "AND"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "cellsToExtract": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "column": {
                                                                  "type": "string"
                                                                },
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "variableId": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "totalRowsToExtract": {
                                                            "type": "string",
                                                            "enum": [
                                                              "All",
                                                              "First",
                                                              "Last",
                                                              "Random"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "action"
                                                        ]
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "credentialsId": {
                                                            "type": "string"
                                                          },
                                                          "sheetId": {
                                                            "type": "string"
                                                          },
                                                          "spreadsheetId": {
                                                            "type": "string"
                                                          },
                                                          "action": {
                                                            "type": "string",
                                                            "enum": [
                                                              "Insert a row"
                                                            ]
                                                          },
                                                          "cellsToInsert": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "column": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                },
                                                                "id": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        "required": [
                                                          "action"
                                                        ]
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "credentialsId": {
                                                            "type": "string"
                                                          },
                                                          "sheetId": {
                                                            "type": "string"
                                                          },
                                                          "spreadsheetId": {
                                                            "type": "string"
                                                          },
                                                          "action": {
                                                            "type": "string",
                                                            "enum": [
                                                              "Update a row"
                                                            ]
                                                          },
                                                          "cellsToUpsert": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "column": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                },
                                                                "id": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "referenceCell": {
                                                            "type": "object",
                                                            "properties": {
                                                              "column": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              },
                                                              "id": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "id"
                                                            ]
                                                          },
                                                          "filter": {
                                                            "type": "object",
                                                            "properties": {
                                                              "comparisons": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "id": {
                                                                      "type": "string"
                                                                    },
                                                                    "column": {
                                                                      "type": "string"
                                                                    },
                                                                    "comparisonOperator": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "Equal to",
                                                                        "Not equal",
                                                                        "Contains",
                                                                        "Does not contain",
                                                                        "Greater than",
                                                                        "Greater or equal to",
                                                                        "Less than",
                                                                        "Less or equal to",
                                                                        "Is set",
                                                                        "Is empty",
                                                                        "Starts with",
                                                                        "Ends with",
                                                                        "Matches regex",
                                                                        "Does not match regex"
                                                                      ]
                                                                    },
                                                                    "value": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "id"
                                                                  ]
                                                                }
                                                              },
                                                              "logicalOperator": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "OR",
                                                                  "AND"
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "required": [
                                                          "action"
                                                        ]
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "credentialsId": {
                                                            "type": "string"
                                                          },
                                                          "sheetId": {
                                                            "type": "string"
                                                          },
                                                          "spreadsheetId": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "type"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "outgoingEdgeId": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Make.com"
                                                    ]
                                                  },
                                                  "options": {
                                                    "type": "object",
                                                    "properties": {
                                                      "variablesForTest": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "responseVariableMapping": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            },
                                                            "bodyPath": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "isAdvancedConfig": {
                                                        "type": "boolean"
                                                      },
                                                      "isCustomBody": {
                                                        "type": "boolean"
                                                      },
                                                      "isExecutedOnClient": {
                                                        "type": "boolean"
                                                      },
                                                      "webhook": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string"
                                                          },
                                                          "queryParams": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "headers": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "method": {
                                                            "type": "string",
                                                            "enum": [
                                                              "POST",
                                                              "GET",
                                                              "PUT",
                                                              "DELETE",
                                                              "PATCH",
                                                              "HEAD",
                                                              "CONNECT",
                                                              "OPTIONS",
                                                              "TRACE"
                                                            ]
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          },
                                                          "body": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id"
                                                        ]
                                                      },
                                                      "timeout": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 120
                                                      }
                                                    }
                                                  },
                                                  "webhookId": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "type"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "outgoingEdgeId": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Pabbly"
                                                    ]
                                                  },
                                                  "options": {
                                                    "type": "object",
                                                    "properties": {
                                                      "variablesForTest": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "responseVariableMapping": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            },
                                                            "bodyPath": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "isAdvancedConfig": {
                                                        "type": "boolean"
                                                      },
                                                      "isCustomBody": {
                                                        "type": "boolean"
                                                      },
                                                      "isExecutedOnClient": {
                                                        "type": "boolean"
                                                      },
                                                      "webhook": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string"
                                                          },
                                                          "queryParams": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "headers": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "method": {
                                                            "type": "string",
                                                            "enum": [
                                                              "POST",
                                                              "GET",
                                                              "PUT",
                                                              "DELETE",
                                                              "PATCH",
                                                              "HEAD",
                                                              "CONNECT",
                                                              "OPTIONS",
                                                              "TRACE"
                                                            ]
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          },
                                                          "body": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id"
                                                        ]
                                                      },
                                                      "timeout": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 120
                                                      }
                                                    }
                                                  },
                                                  "webhookId": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "type"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "outgoingEdgeId": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Webhook"
                                                    ],
                                                    "description": "Legacy name for HTTP Request block"
                                                  },
                                                  "options": {
                                                    "type": "object",
                                                    "properties": {
                                                      "variablesForTest": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "responseVariableMapping": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            },
                                                            "bodyPath": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "isAdvancedConfig": {
                                                        "type": "boolean"
                                                      },
                                                      "isCustomBody": {
                                                        "type": "boolean"
                                                      },
                                                      "isExecutedOnClient": {
                                                        "type": "boolean"
                                                      },
                                                      "webhook": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string"
                                                          },
                                                          "queryParams": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "headers": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "method": {
                                                            "type": "string",
                                                            "enum": [
                                                              "POST",
                                                              "GET",
                                                              "PUT",
                                                              "DELETE",
                                                              "PATCH",
                                                              "HEAD",
                                                              "CONNECT",
                                                              "OPTIONS",
                                                              "TRACE"
                                                            ]
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          },
                                                          "body": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id"
                                                        ]
                                                      },
                                                      "timeout": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 120
                                                      }
                                                    }
                                                  },
                                                  "webhookId": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "type"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "outgoingEdgeId": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Zapier"
                                                    ]
                                                  },
                                                  "options": {
                                                    "type": "object",
                                                    "properties": {
                                                      "variablesForTest": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "responseVariableMapping": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            },
                                                            "bodyPath": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "isAdvancedConfig": {
                                                        "type": "boolean"
                                                      },
                                                      "isCustomBody": {
                                                        "type": "boolean"
                                                      },
                                                      "isExecutedOnClient": {
                                                        "type": "boolean"
                                                      },
                                                      "webhook": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string"
                                                          },
                                                          "queryParams": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "headers": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "method": {
                                                            "type": "string",
                                                            "enum": [
                                                              "POST",
                                                              "GET",
                                                              "PUT",
                                                              "DELETE",
                                                              "PATCH",
                                                              "HEAD",
                                                              "CONNECT",
                                                              "OPTIONS",
                                                              "TRACE"
                                                            ]
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          },
                                                          "body": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id"
                                                        ]
                                                      },
                                                      "timeout": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 120
                                                      }
                                                    }
                                                  },
                                                  "webhookId": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "title",
                                    "graphCoordinates",
                                    "blocks"
                                  ]
                                }
                              },
                              "variables": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "isSessionVariable": {
                                      "type": "boolean"
                                    },
                                    "value": {
                                      "nullable": true,
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "nullable": true
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                }
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "version",
                              "groups",
                              "variables",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string",
                                "enum": [
                                  "6"
                                ]
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/groupV6"
                                }
                              },
                              "variables": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "isSessionVariable": {
                                      "type": "boolean"
                                    },
                                    "value": {
                                      "nullable": true,
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "nullable": true
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                }
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "version",
                              "groups",
                              "variables",
                              "name"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "agents"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/analytics/inDepthData": {
      "get": {
        "operationId": "analytics-getInDepthAnalyticsData",
        "summary": "List total answers in blocks and off-default paths visited edges",
        "tags": [
          "Analytics"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timeFilter",
            "schema": {
              "type": "string",
              "enum": [
                "today",
                "last7Days",
                "last30Days",
                "monthToDate",
                "lastMonth",
                "yearToDate",
                "allTime"
              ],
              "default": "last7Days"
            }
          },
          {
            "in": "query",
            "name": "timeZone",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalAnswers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockId": {
                            "type": "string"
                          },
                          "itemId": {
                            "type": "string"
                          },
                          "total": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "blockId",
                          "total"
                        ]
                      }
                    },
                    "offDefaultPathVisitedEdges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "edgeId": {
                            "type": "string"
                          },
                          "total": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "edgeId",
                          "total"
                        ]
                      }
                    }
                  },
                  "required": [
                    "totalAnswers",
                    "offDefaultPathVisitedEdges"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/analytics/stats": {
      "get": {
        "operationId": "analytics-getStats",
        "summary": "Get results stats",
        "tags": [
          "Analytics"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timeFilter",
            "schema": {
              "type": "string",
              "enum": [
                "today",
                "last7Days",
                "last30Days",
                "monthToDate",
                "lastMonth",
                "yearToDate",
                "allTime"
              ],
              "default": "last7Days"
            }
          },
          {
            "in": "query",
            "name": "timeZone",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {
                      "type": "object",
                      "properties": {
                        "totalViews": {
                          "type": "number"
                        },
                        "totalStarts": {
                          "type": "number"
                        },
                        "totalCompleted": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "totalViews",
                        "totalStarts",
                        "totalCompleted"
                      ]
                    }
                  },
                  "required": [
                    "stats"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspaces": {
      "get": {
        "operationId": "workspace-listWorkspaces",
        "summary": "List workspaces",
        "tags": [
          "Workspace"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "HOBBY",
                              "PRO",
                              "BUSINESS",
                              "ADVANCED",
                              "ENTERPRISE",
                              "CUSTOM_APPSUMO_TIER1",
                              "CUSTOM_APPSUMO_TIER2",
                              "CUSTOM_APPSUMO_TIER3",
                              "CUSTOM_APPSUMO_TIER4",
                              "CUSTOM_APPSUMO_TIER5",
                              "CUSTOM_APPSUMO_TIER6",
                              "CUSTOM_APPSUMO_TIER7",
                              "CUSTOM_APPSUMO_TIER8",
                              "CUSTOM_APPSUMO_TIER9",
                              "CUSTOM_APPSUMO_TIER10"
                            ]
                          },
                          "slug": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "icon",
                          "plan",
                          "slug"
                        ]
                      }
                    }
                  },
                  "required": [
                    "workspaces"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "workspace-createWorkspace",
        "summary": "Create workspace",
        "tags": [
          "Workspace"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "icon": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspace": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "lastActivityAt": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "icon": {
                          "type": "string",
                          "nullable": true
                        },
                        "slug": {
                          "type": "string",
                          "nullable": true
                        },
                        "plan": {
                          "type": "string",
                          "enum": [
                            "HOBBY",
                            "PRO",
                            "BUSINESS",
                            "ADVANCED",
                            "ENTERPRISE",
                            "CUSTOM_APPSUMO_TIER1",
                            "CUSTOM_APPSUMO_TIER2",
                            "CUSTOM_APPSUMO_TIER3",
                            "CUSTOM_APPSUMO_TIER4",
                            "CUSTOM_APPSUMO_TIER5",
                            "CUSTOM_APPSUMO_TIER6",
                            "CUSTOM_APPSUMO_TIER7",
                            "CUSTOM_APPSUMO_TIER8",
                            "CUSTOM_APPSUMO_TIER9",
                            "CUSTOM_APPSUMO_TIER10"
                          ]
                        },
                        "stripeId": {
                          "type": "string",
                          "nullable": true
                        },
                        "isSuspended": {
                          "type": "boolean"
                        },
                        "isPastDue": {
                          "type": "boolean"
                        },
                        "isVerified": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "billingCycleStart": {
                          "type": "number",
                          "nullable": true
                        },
                        "paymentFailedAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "stripeConnectId": {
                          "type": "string",
                          "nullable": true
                        },
                        "chatUsage": {
                          "type": "number"
                        },
                        "redeemedCoupons": {
                          "type": "string",
                          "nullable": true
                        },
                        "extras": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "addons": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "lastActivityAt",
                        "name",
                        "icon",
                        "slug",
                        "plan",
                        "stripeId",
                        "isSuspended",
                        "isPastDue",
                        "isVerified",
                        "billingCycleStart",
                        "paymentFailedAt",
                        "stripeConnectId",
                        "chatUsage",
                        "redeemedCoupons",
                        "extras",
                        "addons"
                      ]
                    }
                  },
                  "required": [
                    "workspace"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspaces/{workspaceId}": {
      "get": {
        "operationId": "workspace-getWorkspace",
        "summary": "Get workspace",
        "tags": [
          "Workspace"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "[Where to find my workspace ID or slug?](../how-to#how-to-find-my-workspaceid-or-slug)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workspace ID or slug?](../how-to#how-to-find-my-workspaceid-or-slug)"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "getDefault",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspace": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "lastActivityAt": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "icon": {
                          "type": "string",
                          "nullable": true
                        },
                        "slug": {
                          "type": "string",
                          "nullable": true
                        },
                        "plan": {
                          "type": "string",
                          "description": "Plan name"
                        },
                        "stripeId": {
                          "type": "string",
                          "nullable": true
                        },
                        "isQuarantined": {
                          "type": "boolean"
                        },
                        "isSuspended": {
                          "type": "boolean"
                        },
                        "isPastDue": {
                          "type": "boolean"
                        },
                        "isVerified": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "billingCycleStart": {
                          "type": "number",
                          "nullable": true
                        },
                        "paymentFailedAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "stripeConnectId": {
                          "type": "string",
                          "nullable": true
                        },
                        "chatUsage": {
                          "type": "number"
                        },
                        "redeemedCoupons": {
                          "type": "string",
                          "nullable": true
                        },
                        "extras": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "addons": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "lastActivityAt",
                        "name",
                        "icon",
                        "slug",
                        "plan",
                        "stripeId",
                        "isQuarantined",
                        "isSuspended",
                        "isPastDue",
                        "isVerified",
                        "billingCycleStart",
                        "paymentFailedAt",
                        "stripeConnectId",
                        "chatUsage",
                        "redeemedCoupons",
                        "extras",
                        "addons"
                      ]
                    }
                  },
                  "required": [
                    "workspace"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "workspace-updateWorkspace",
        "summary": "Update workspace",
        "tags": [
          "Workspace"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "icon": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspace": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "icon": {
                          "type": "string",
                          "nullable": true
                        },
                        "slug": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "name",
                        "icon",
                        "slug"
                      ]
                    }
                  },
                  "required": [
                    "workspace"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "workspace-deleteWorkspace",
        "summary": "Delete workspace",
        "tags": [
          "Workspace"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspaces/{workspaceId}/members": {
      "get": {
        "operationId": "workspace-listMembersInWorkspace",
        "summary": "List members in workspace",
        "tags": [
          "Workspace"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "workspaceId": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "nullable": true
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "image": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "name",
                              "email",
                              "image"
                            ]
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "ADMIN",
                              "MEMBER",
                              "GUEST"
                            ]
                          }
                        },
                        "required": [
                          "workspaceId",
                          "user",
                          "role"
                        ]
                      }
                    }
                  },
                  "required": [
                    "members"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspaces/{slug}/exists": {
      "get": {
        "operationId": "workspace-doesWorkspaceExistBySlug",
        "summary": "Check if workspace exists",
        "tags": [
          "Workspace"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exists": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "exists"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspaces/createSytemWorkspace": {
      "get": {
        "operationId": "workspace-createSytemWorkspace",
        "summary": "List workspaces",
        "tags": [
          "Workspace"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "result",
                    "logs"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents": {
      "post": {
        "operationId": "agent-createAgent",
        "summary": "Create a agent",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "agent": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "icon": {
                        "type": "string",
                        "nullable": true
                      },
                      "selectedThemeTemplateId": {
                        "type": "string",
                        "nullable": true
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/groupV6"
                        }
                      },
                      "events": {
                        "type": "array",
                        "maxItems": 1,
                        "minItems": 1,
                        "items": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/event"
                            }
                          ]
                        }
                      },
                      "theme": {
                        "$ref": "#/components/schemas/theme"
                      },
                      "settings": {
                        "$ref": "#/components/schemas/settings"
                      },
                      "variables": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "isSessionVariable": {
                              "type": "boolean"
                            },
                            "value": {
                              "nullable": true,
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "edges": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "from": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "blockId": {
                                      "type": "string"
                                    },
                                    "itemId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "blockId"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "eventId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "eventId"
                                  ]
                                }
                              ]
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "groupId": {
                                  "type": "string"
                                },
                                "blockId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "groupId"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "from",
                            "to"
                          ]
                        }
                      },
                      "resultsTablePreferences": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "columnsOrder": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "columnsVisibility": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "boolean"
                            }
                          },
                          "columnsWidth": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "number"
                            }
                          }
                        },
                        "required": [
                          "columnsOrder",
                          "columnsVisibility",
                          "columnsWidth"
                        ]
                      },
                      "publicId": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "required": [
                  "workspaceId",
                  "agent"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {
                      "$ref": "#/components/schemas/agentV6"
                    }
                  },
                  "required": [
                    "agent"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "agent-listAgents",
        "summary": "List agents",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceId",
            "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "publicId": {
                            "type": "string",
                            "nullable": true
                          },
                          "isPublished": {
                            "type": "boolean"
                          },
                          "publishedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "domainId": {
                            "type": "string",
                            "nullable": true
                          },
                          "accessRight": {
                            "type": "string",
                            "enum": [
                              "read",
                              "write",
                              "guest"
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "icon",
                          "createdAt",
                          "updatedAt",
                          "id",
                          "url",
                          "description",
                          "publicId",
                          "isPublished",
                          "publishedAt",
                          "domainId",
                          "accessRight",
                          "tags"
                        ]
                      }
                    }
                  },
                  "required": [
                    "agents"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}": {
      "patch": {
        "operationId": "agent-updateAgent",
        "summary": "Update a agent",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "enum": [
                              "6"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "selectedThemeTemplateId": {
                            "type": "string",
                            "nullable": true
                          },
                          "groups": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/groupV6"
                            }
                          },
                          "theme": {
                            "$ref": "#/components/schemas/theme"
                          },
                          "settings": {
                            "$ref": "#/components/schemas/settings"
                          },
                          "variables": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "isSessionVariable": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "nullable": true,
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "edges": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "from": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "blockId": {
                                          "type": "string"
                                        },
                                        "itemId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "blockId"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "eventId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "eventId"
                                      ]
                                    }
                                  ]
                                },
                                "to": {
                                  "type": "object",
                                  "properties": {
                                    "groupId": {
                                      "type": "string"
                                    },
                                    "blockId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "groupId"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "from",
                                "to"
                              ]
                            }
                          },
                          "resultsTablePreferences": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "columnsOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "columnsVisibility": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "boolean"
                                }
                              },
                              "columnsWidth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number"
                                }
                              }
                            },
                            "required": [
                              "columnsOrder",
                              "columnsVisibility",
                              "columnsWidth"
                            ]
                          },
                          "publicId": {
                            "type": "string",
                            "nullable": true
                          },
                          "customDomain": {
                            "type": "string",
                            "nullable": true
                          },
                          "url": {
                            "type": "string",
                            "nullable": true
                          },
                          "domainId": {
                            "type": "string",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "isClosed": {
                            "type": "boolean"
                          },
                          "whatsAppCredentialsId": {
                            "type": "string",
                            "nullable": true
                          },
                          "riskLevel": {
                            "type": "number",
                            "nullable": true
                          },
                          "events": {
                            "type": "array",
                            "maxItems": 1,
                            "minItems": 1,
                            "items": {
                              "oneOf": [
                                {
                                  "$ref": "#/components/schemas/event"
                                }
                              ]
                            }
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sharing": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/sharing"
                              }
                            ],
                            "nullable": true
                          },
                          "shareId": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "title": "Agent V6"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "enum": [
                              "3",
                              "4",
                              "5"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "selectedThemeTemplateId": {
                            "type": "string",
                            "nullable": true
                          },
                          "groups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                },
                                "graphCoordinates": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "number"
                                    },
                                    "y": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "x",
                                    "y"
                                  ]
                                },
                                "blocks": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "outgoingEdgeId": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "start"
                                            ]
                                          },
                                          "label": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "type",
                                          "label"
                                        ]
                                      },
                                      {
                                        "oneOf": [
                                          {
                                            "$ref": "#/components/schemas/textBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/imageBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/videoBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/embedBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/audioBlock"
                                          }
                                        ],
                                        "discriminator": {
                                          "propertyName": "type",
                                          "mapping": {
                                            "text": "#/components/schemas/textBlock",
                                            "image": "#/components/schemas/imageBlock",
                                            "video": "#/components/schemas/videoBlock",
                                            "embed": "#/components/schemas/embedBlock",
                                            "audio": "#/components/schemas/audioBlock"
                                          }
                                        }
                                      },
                                      {
                                        "oneOf": [
                                          {
                                            "$ref": "#/components/schemas/textInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/email"
                                          },
                                          {
                                            "$ref": "#/components/schemas/address"
                                          },
                                          {
                                            "$ref": "#/components/schemas/autocomplete"
                                          },
                                          {
                                            "$ref": "#/components/schemas/numberInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/url"
                                          },
                                          {
                                            "$ref": "#/components/schemas/phoneNumberInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/dateInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/paymentInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/rating"
                                          },
                                          {
                                            "$ref": "#/components/schemas/buttonsInputV5"
                                          },
                                          {
                                            "$ref": "#/components/schemas/fileInputV5"
                                          },
                                          {
                                            "$ref": "#/components/schemas/pictureChoiceV5"
                                          }
                                        ],
                                        "discriminator": {
                                          "propertyName": "type",
                                          "mapping": {
                                            "text input": "#/components/schemas/textInput",
                                            "email input": "#/components/schemas/email",
                                            "address input": "#/components/schemas/address",
                                            "autocomplete input": "#/components/schemas/autocomplete",
                                            "number input": "#/components/schemas/numberInput",
                                            "url input": "#/components/schemas/url",
                                            "phone number input": "#/components/schemas/phoneNumberInput",
                                            "date input": "#/components/schemas/dateInput",
                                            "payment input": "#/components/schemas/paymentInput",
                                            "rating input": "#/components/schemas/rating",
                                            "choice input": "#/components/schemas/buttonsInputV5",
                                            "file input": "#/components/schemas/fileInputV5",
                                            "image choice": "#/components/schemas/pictureChoiceV5"
                                          }
                                        }
                                      },
                                      {
                                        "oneOf": [
                                          {
                                            "$ref": "#/components/schemas/scriptLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/redirectLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/setVariableLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/AgentLinkLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/waitLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/jumpLogic"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Condition"
                                                ]
                                              },
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "blockId": {
                                                      "type": "string"
                                                    },
                                                    "outgoingEdgeId": {
                                                      "type": "string"
                                                    },
                                                    "content": {
                                                      "type": "object",
                                                      "properties": {
                                                        "logicalOperator": {
                                                          "type": "string",
                                                          "enum": [
                                                            "OR",
                                                            "AND"
                                                          ]
                                                        },
                                                        "comparisons": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "id": {
                                                                "type": "string"
                                                              },
                                                              "variableId": {
                                                                "type": "string"
                                                              },
                                                              "comparisonOperator": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "Equal to",
                                                                  "Not equal",
                                                                  "Contains",
                                                                  "Does not contain",
                                                                  "Greater than",
                                                                  "Greater or equal to",
                                                                  "Less than",
                                                                  "Less or equal to",
                                                                  "Is set",
                                                                  "Is empty",
                                                                  "Starts with",
                                                                  "Ends with",
                                                                  "Matches regex",
                                                                  "Does not match regex"
                                                                ]
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "id"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "id"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type",
                                              "items"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "AB test"
                                                ]
                                              },
                                              "items": {
                                                "type": "array",
                                                "maxItems": 2,
                                                "minItems": 2,
                                                "items": {
                                                  "oneOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "blockId": {
                                                          "type": "string"
                                                        },
                                                        "outgoingEdgeId": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "enum": [
                                                            "a"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "path"
                                                      ]
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "blockId": {
                                                          "type": "string"
                                                        },
                                                        "outgoingEdgeId": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "enum": [
                                                            "b"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "path"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "aPercent": {
                                                    "type": "number",
                                                    "minimum": 0,
                                                    "maximum": 100
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type",
                                              "items"
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "oneOf": [
                                          {
                                            "$ref": "#/components/schemas/chatwootBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/googleAnalyticsBlock"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "OpenAI"
                                                ]
                                              },
                                              "options": {
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "baseUrl": {
                                                        "type": "string"
                                                      },
                                                      "apiVersion": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "task": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Create chat completion"
                                                        ]
                                                      },
                                                      "model": {
                                                        "type": "string"
                                                      },
                                                      "messages": {
                                                        "type": "array",
                                                        "items": {
                                                          "anyOf": [
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "role": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "system",
                                                                    "user",
                                                                    "assistant"
                                                                  ]
                                                                },
                                                                "content": {
                                                                  "type": "string"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "role": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Messages sequence ✨"
                                                                  ]
                                                                },
                                                                "content": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "assistantMessagesVariableId": {
                                                                      "type": "string"
                                                                    },
                                                                    "userMessagesVariableId": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "required": [
                                                                "id",
                                                                "role"
                                                              ]
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "role": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Dialogue"
                                                                  ]
                                                                },
                                                                "dialogueVariableId": {
                                                                  "type": "string"
                                                                },
                                                                "startsBy": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "user",
                                                                    "assistant"
                                                                  ]
                                                                }
                                                              },
                                                              "required": [
                                                                "id",
                                                                "role"
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "advancedSettings": {
                                                        "type": "object",
                                                        "properties": {
                                                          "temperature": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {}
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "responseMapping": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "valueToExtract": {
                                                              "type": "string",
                                                              "enum": [
                                                                "Message content",
                                                                "Total tokens"
                                                              ]
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id",
                                                            "valueToExtract"
                                                          ]
                                                        }
                                                      },
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "baseUrl": {
                                                        "type": "string"
                                                      },
                                                      "apiVersion": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "task"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "task": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Create image"
                                                        ]
                                                      },
                                                      "prompt": {
                                                        "type": "string"
                                                      },
                                                      "advancedOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                          "size": {
                                                            "type": "string",
                                                            "enum": [
                                                              "256x256",
                                                              "512x512",
                                                              "1024x1024"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "responseMapping": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "valueToExtract": {
                                                              "type": "string",
                                                              "enum": [
                                                                "Image URL"
                                                              ]
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id",
                                                            "valueToExtract"
                                                          ]
                                                        }
                                                      },
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "baseUrl": {
                                                        "type": "string"
                                                      },
                                                      "apiVersion": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "task",
                                                      "advancedOptions",
                                                      "responseMapping"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "baseUrl": {
                                                        "type": "string"
                                                      },
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "task": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Create speech"
                                                        ]
                                                      },
                                                      "model": {
                                                        "type": "string"
                                                      },
                                                      "input": {
                                                        "type": "string"
                                                      },
                                                      "voice": {
                                                        "type": "string",
                                                        "enum": [
                                                          "alloy",
                                                          "echo",
                                                          "fable",
                                                          "onyx",
                                                          "nova",
                                                          "shimmer"
                                                        ]
                                                      },
                                                      "saveUrlInVariableId": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "task"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "$ref": "#/components/schemas/sendEmailBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/pixelBlock"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Google Sheets"
                                                ]
                                              },
                                              "options": {
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "sheetId": {
                                                        "type": "string"
                                                      },
                                                      "spreadsheetId": {
                                                        "type": "string"
                                                      },
                                                      "action": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Get data from sheet"
                                                        ]
                                                      },
                                                      "referenceCell": {
                                                        "type": "object",
                                                        "properties": {
                                                          "column": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          },
                                                          "id": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id"
                                                        ]
                                                      },
                                                      "filter": {
                                                        "type": "object",
                                                        "properties": {
                                                          "comparisons": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "column": {
                                                                  "type": "string"
                                                                },
                                                                "comparisonOperator": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Equal to",
                                                                    "Not equal",
                                                                    "Contains",
                                                                    "Does not contain",
                                                                    "Greater than",
                                                                    "Greater or equal to",
                                                                    "Less than",
                                                                    "Less or equal to",
                                                                    "Is set",
                                                                    "Is empty",
                                                                    "Starts with",
                                                                    "Ends with",
                                                                    "Matches regex",
                                                                    "Does not match regex"
                                                                  ]
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "logicalOperator": {
                                                            "type": "string",
                                                            "enum": [
                                                              "OR",
                                                              "AND"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "cellsToExtract": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "column": {
                                                              "type": "string"
                                                            },
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "totalRowsToExtract": {
                                                        "type": "string",
                                                        "enum": [
                                                          "All",
                                                          "First",
                                                          "Last",
                                                          "Random"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "action"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "sheetId": {
                                                        "type": "string"
                                                      },
                                                      "spreadsheetId": {
                                                        "type": "string"
                                                      },
                                                      "action": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Insert a row"
                                                        ]
                                                      },
                                                      "cellsToInsert": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "column": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            },
                                                            "id": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "action"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "sheetId": {
                                                        "type": "string"
                                                      },
                                                      "spreadsheetId": {
                                                        "type": "string"
                                                      },
                                                      "action": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Update a row"
                                                        ]
                                                      },
                                                      "cellsToUpsert": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "column": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            },
                                                            "id": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "referenceCell": {
                                                        "type": "object",
                                                        "properties": {
                                                          "column": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          },
                                                          "id": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id"
                                                        ]
                                                      },
                                                      "filter": {
                                                        "type": "object",
                                                        "properties": {
                                                          "comparisons": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "column": {
                                                                  "type": "string"
                                                                },
                                                                "comparisonOperator": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Equal to",
                                                                    "Not equal",
                                                                    "Contains",
                                                                    "Does not contain",
                                                                    "Greater than",
                                                                    "Greater or equal to",
                                                                    "Less than",
                                                                    "Less or equal to",
                                                                    "Is set",
                                                                    "Is empty",
                                                                    "Starts with",
                                                                    "Ends with",
                                                                    "Matches regex",
                                                                    "Does not match regex"
                                                                  ]
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "logicalOperator": {
                                                            "type": "string",
                                                            "enum": [
                                                              "OR",
                                                              "AND"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "action"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "sheetId": {
                                                        "type": "string"
                                                      },
                                                      "spreadsheetId": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Make.com"
                                                ]
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "variablesForTest": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "responseVariableMapping": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "bodyPath": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "isAdvancedConfig": {
                                                    "type": "boolean"
                                                  },
                                                  "isCustomBody": {
                                                    "type": "boolean"
                                                  },
                                                  "isExecutedOnClient": {
                                                    "type": "boolean"
                                                  },
                                                  "webhook": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "queryParams": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "headers": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "method": {
                                                        "type": "string",
                                                        "enum": [
                                                          "POST",
                                                          "GET",
                                                          "PUT",
                                                          "DELETE",
                                                          "PATCH",
                                                          "HEAD",
                                                          "CONNECT",
                                                          "OPTIONS",
                                                          "TRACE"
                                                        ]
                                                      },
                                                      "url": {
                                                        "type": "string"
                                                      },
                                                      "body": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id"
                                                    ]
                                                  },
                                                  "timeout": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 120
                                                  }
                                                }
                                              },
                                              "webhookId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Pabbly"
                                                ]
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "variablesForTest": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "responseVariableMapping": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "bodyPath": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "isAdvancedConfig": {
                                                    "type": "boolean"
                                                  },
                                                  "isCustomBody": {
                                                    "type": "boolean"
                                                  },
                                                  "isExecutedOnClient": {
                                                    "type": "boolean"
                                                  },
                                                  "webhook": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "queryParams": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "headers": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "method": {
                                                        "type": "string",
                                                        "enum": [
                                                          "POST",
                                                          "GET",
                                                          "PUT",
                                                          "DELETE",
                                                          "PATCH",
                                                          "HEAD",
                                                          "CONNECT",
                                                          "OPTIONS",
                                                          "TRACE"
                                                        ]
                                                      },
                                                      "url": {
                                                        "type": "string"
                                                      },
                                                      "body": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id"
                                                    ]
                                                  },
                                                  "timeout": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 120
                                                  }
                                                }
                                              },
                                              "webhookId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Webhook"
                                                ],
                                                "description": "Legacy name for HTTP Request block"
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "variablesForTest": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "responseVariableMapping": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "bodyPath": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "isAdvancedConfig": {
                                                    "type": "boolean"
                                                  },
                                                  "isCustomBody": {
                                                    "type": "boolean"
                                                  },
                                                  "isExecutedOnClient": {
                                                    "type": "boolean"
                                                  },
                                                  "webhook": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "queryParams": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "headers": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "method": {
                                                        "type": "string",
                                                        "enum": [
                                                          "POST",
                                                          "GET",
                                                          "PUT",
                                                          "DELETE",
                                                          "PATCH",
                                                          "HEAD",
                                                          "CONNECT",
                                                          "OPTIONS",
                                                          "TRACE"
                                                        ]
                                                      },
                                                      "url": {
                                                        "type": "string"
                                                      },
                                                      "body": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id"
                                                    ]
                                                  },
                                                  "timeout": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 120
                                                  }
                                                }
                                              },
                                              "webhookId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Zapier"
                                                ]
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "variablesForTest": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "responseVariableMapping": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "bodyPath": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "isAdvancedConfig": {
                                                    "type": "boolean"
                                                  },
                                                  "isCustomBody": {
                                                    "type": "boolean"
                                                  },
                                                  "isExecutedOnClient": {
                                                    "type": "boolean"
                                                  },
                                                  "webhook": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "queryParams": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "headers": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "method": {
                                                        "type": "string",
                                                        "enum": [
                                                          "POST",
                                                          "GET",
                                                          "PUT",
                                                          "DELETE",
                                                          "PATCH",
                                                          "HEAD",
                                                          "CONNECT",
                                                          "OPTIONS",
                                                          "TRACE"
                                                        ]
                                                      },
                                                      "url": {
                                                        "type": "string"
                                                      },
                                                      "body": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id"
                                                    ]
                                                  },
                                                  "timeout": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 120
                                                  }
                                                }
                                              },
                                              "webhookId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "title",
                                "graphCoordinates",
                                "blocks"
                              ]
                            }
                          },
                          "theme": {
                            "$ref": "#/components/schemas/theme"
                          },
                          "settings": {
                            "$ref": "#/components/schemas/settings"
                          },
                          "variables": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "isSessionVariable": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "nullable": true,
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "edges": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "from": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "blockId": {
                                          "type": "string"
                                        },
                                        "itemId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "blockId"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "eventId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "eventId"
                                      ]
                                    }
                                  ]
                                },
                                "to": {
                                  "type": "object",
                                  "properties": {
                                    "groupId": {
                                      "type": "string"
                                    },
                                    "blockId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "groupId"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "from",
                                "to"
                              ]
                            }
                          },
                          "resultsTablePreferences": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "columnsOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "columnsVisibility": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "boolean"
                                }
                              },
                              "columnsWidth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number"
                                }
                              }
                            },
                            "required": [
                              "columnsOrder",
                              "columnsVisibility",
                              "columnsWidth"
                            ]
                          },
                          "publicId": {
                            "type": "string",
                            "nullable": true
                          },
                          "customDomain": {
                            "type": "string",
                            "nullable": true
                          },
                          "url": {
                            "type": "string",
                            "nullable": true
                          },
                          "domainId": {
                            "type": "string",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "isClosed": {
                            "type": "boolean"
                          },
                          "whatsAppCredentialsId": {
                            "type": "string",
                            "nullable": true
                          },
                          "riskLevel": {
                            "type": "number",
                            "nullable": true
                          },
                          "events": {
                            "type": "array"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sharing": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/sharing"
                              }
                            ],
                            "nullable": true
                          },
                          "shareId": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "title": "Agent V5"
                      }
                    ]
                  }
                },
                "required": [
                  "agent"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {
                      "$ref": "#/components/schemas/agentV6"
                    }
                  },
                  "required": [
                    "agent"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "agent-getAgent",
        "summary": "Get a agent",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/agentV6"
                        },
                        {
                          "$ref": "#/components/schemas/agentV5"
                        }
                      ],
                      "discriminator": {
                        "propertyName": "version",
                        "mapping": {
                          "3": "#/components/schemas/agentV5",
                          "4": "#/components/schemas/agentV5",
                          "5": "#/components/schemas/agentV5",
                          "6": "#/components/schemas/agentV6"
                        }
                      }
                    },
                    "currentUserMode": {
                      "type": "string",
                      "enum": [
                        "guest",
                        "read",
                        "write"
                      ]
                    }
                  },
                  "required": [
                    "agent",
                    "currentUserMode"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "agent-deleteAgent",
        "summary": "Delete a agent",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/publishedAgent": {
      "get": {
        "operationId": "agent-getPublishedAgent",
        "summary": "Get published agent",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[Where to find my agentId?](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my agentId?](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publicAgent": {
                      "nullable": true,
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/publicAgentV6"
                        },
                        {
                          "$ref": "#/components/schemas/publicAgentV5"
                        }
                      ],
                      "discriminator": {
                        "propertyName": "version",
                        "mapping": {
                          "3": "#/components/schemas/publicAgentV5",
                          "4": "#/components/schemas/publicAgentV5",
                          "5": "#/components/schemas/publicAgentV5",
                          "6": "#/components/schemas/publicAgentV6"
                        }
                      },
                      "title": "Public Agent"
                    }
                  },
                  "required": [
                    "publicAgent"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/publish": {
      "post": {
        "operationId": "agent-publishAgent",
        "summary": "Publish an agent",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[🚀 Where can I find my agent's ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where can I find my agent's ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/unpublish": {
      "post": {
        "operationId": "agent-unpublishAgent",
        "summary": "Unpublish an agent",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/import": {
      "post": {
        "operationId": "agent-importAgent",
        "summary": "Import a agent",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string",
                    "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)"
                  },
                  "agent": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "enum": [
                              "6"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "events": {
                            "type": "array",
                            "maxItems": 1,
                            "minItems": 1,
                            "items": {
                              "oneOf": [
                                {
                                  "$ref": "#/components/schemas/event"
                                }
                              ]
                            }
                          },
                          "groups": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/groupV6"
                            }
                          },
                          "edges": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "from": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "blockId": {
                                          "type": "string"
                                        },
                                        "itemId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "blockId"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "eventId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "eventId"
                                      ]
                                    }
                                  ]
                                },
                                "to": {
                                  "type": "object",
                                  "properties": {
                                    "groupId": {
                                      "type": "string"
                                    },
                                    "blockId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "groupId"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "from",
                                "to"
                              ]
                            }
                          },
                          "variables": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "isSessionVariable": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "nullable": true,
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "theme": {
                            "$ref": "#/components/schemas/theme"
                          },
                          "settings": {
                            "$ref": "#/components/schemas/settings"
                          },
                          "isPublished": {
                            "type": "boolean"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sharing": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/sharing"
                              }
                            ],
                            "nullable": true
                          },
                          "shareId": {
                            "type": "string",
                            "nullable": true
                          },
                          "resultsTablePreferences": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "columnsOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "columnsVisibility": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "boolean"
                                }
                              },
                              "columnsWidth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number"
                                }
                              }
                            },
                            "required": [
                              "columnsOrder",
                              "columnsVisibility",
                              "columnsWidth"
                            ]
                          },
                          "selectedThemeTemplateId": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "version",
                          "name",
                          "events",
                          "groups",
                          "edges",
                          "variables",
                          "theme",
                          "settings",
                          "isPublished",
                          "icon",
                          "description",
                          "sharing",
                          "shareId"
                        ],
                        "title": "Agent V6"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "enum": [
                              "3",
                              "4",
                              "5"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "events": {
                            "type": "array"
                          },
                          "groups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                },
                                "graphCoordinates": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "number"
                                    },
                                    "y": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "x",
                                    "y"
                                  ]
                                },
                                "blocks": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "outgoingEdgeId": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "start"
                                            ]
                                          },
                                          "label": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "type",
                                          "label"
                                        ]
                                      },
                                      {
                                        "oneOf": [
                                          {
                                            "$ref": "#/components/schemas/textBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/imageBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/videoBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/embedBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/audioBlock"
                                          }
                                        ],
                                        "discriminator": {
                                          "propertyName": "type",
                                          "mapping": {
                                            "text": "#/components/schemas/textBlock",
                                            "image": "#/components/schemas/imageBlock",
                                            "video": "#/components/schemas/videoBlock",
                                            "embed": "#/components/schemas/embedBlock",
                                            "audio": "#/components/schemas/audioBlock"
                                          }
                                        }
                                      },
                                      {
                                        "oneOf": [
                                          {
                                            "$ref": "#/components/schemas/textInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/email"
                                          },
                                          {
                                            "$ref": "#/components/schemas/address"
                                          },
                                          {
                                            "$ref": "#/components/schemas/autocomplete"
                                          },
                                          {
                                            "$ref": "#/components/schemas/numberInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/url"
                                          },
                                          {
                                            "$ref": "#/components/schemas/phoneNumberInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/dateInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/paymentInput"
                                          },
                                          {
                                            "$ref": "#/components/schemas/rating"
                                          },
                                          {
                                            "$ref": "#/components/schemas/buttonsInputV5"
                                          },
                                          {
                                            "$ref": "#/components/schemas/fileInputV5"
                                          },
                                          {
                                            "$ref": "#/components/schemas/pictureChoiceV5"
                                          }
                                        ],
                                        "discriminator": {
                                          "propertyName": "type",
                                          "mapping": {
                                            "text input": "#/components/schemas/textInput",
                                            "email input": "#/components/schemas/email",
                                            "address input": "#/components/schemas/address",
                                            "autocomplete input": "#/components/schemas/autocomplete",
                                            "number input": "#/components/schemas/numberInput",
                                            "url input": "#/components/schemas/url",
                                            "phone number input": "#/components/schemas/phoneNumberInput",
                                            "date input": "#/components/schemas/dateInput",
                                            "payment input": "#/components/schemas/paymentInput",
                                            "rating input": "#/components/schemas/rating",
                                            "choice input": "#/components/schemas/buttonsInputV5",
                                            "file input": "#/components/schemas/fileInputV5",
                                            "image choice": "#/components/schemas/pictureChoiceV5"
                                          }
                                        }
                                      },
                                      {
                                        "oneOf": [
                                          {
                                            "$ref": "#/components/schemas/scriptLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/redirectLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/setVariableLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/AgentLinkLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/waitLogic"
                                          },
                                          {
                                            "$ref": "#/components/schemas/jumpLogic"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Condition"
                                                ]
                                              },
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "blockId": {
                                                      "type": "string"
                                                    },
                                                    "outgoingEdgeId": {
                                                      "type": "string"
                                                    },
                                                    "content": {
                                                      "type": "object",
                                                      "properties": {
                                                        "logicalOperator": {
                                                          "type": "string",
                                                          "enum": [
                                                            "OR",
                                                            "AND"
                                                          ]
                                                        },
                                                        "comparisons": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "id": {
                                                                "type": "string"
                                                              },
                                                              "variableId": {
                                                                "type": "string"
                                                              },
                                                              "comparisonOperator": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "Equal to",
                                                                  "Not equal",
                                                                  "Contains",
                                                                  "Does not contain",
                                                                  "Greater than",
                                                                  "Greater or equal to",
                                                                  "Less than",
                                                                  "Less or equal to",
                                                                  "Is set",
                                                                  "Is empty",
                                                                  "Starts with",
                                                                  "Ends with",
                                                                  "Matches regex",
                                                                  "Does not match regex"
                                                                ]
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "id"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "id"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type",
                                              "items"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "AB test"
                                                ]
                                              },
                                              "items": {
                                                "type": "array",
                                                "maxItems": 2,
                                                "minItems": 2,
                                                "items": {
                                                  "oneOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "blockId": {
                                                          "type": "string"
                                                        },
                                                        "outgoingEdgeId": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "enum": [
                                                            "a"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "path"
                                                      ]
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "blockId": {
                                                          "type": "string"
                                                        },
                                                        "outgoingEdgeId": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "enum": [
                                                            "b"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "path"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "aPercent": {
                                                    "type": "number",
                                                    "minimum": 0,
                                                    "maximum": 100
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type",
                                              "items"
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "oneOf": [
                                          {
                                            "$ref": "#/components/schemas/chatwootBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/googleAnalyticsBlock"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "OpenAI"
                                                ]
                                              },
                                              "options": {
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "baseUrl": {
                                                        "type": "string"
                                                      },
                                                      "apiVersion": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "task": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Create chat completion"
                                                        ]
                                                      },
                                                      "model": {
                                                        "type": "string"
                                                      },
                                                      "messages": {
                                                        "type": "array",
                                                        "items": {
                                                          "anyOf": [
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "role": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "system",
                                                                    "user",
                                                                    "assistant"
                                                                  ]
                                                                },
                                                                "content": {
                                                                  "type": "string"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "role": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Messages sequence ✨"
                                                                  ]
                                                                },
                                                                "content": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "assistantMessagesVariableId": {
                                                                      "type": "string"
                                                                    },
                                                                    "userMessagesVariableId": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "required": [
                                                                "id",
                                                                "role"
                                                              ]
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "role": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Dialogue"
                                                                  ]
                                                                },
                                                                "dialogueVariableId": {
                                                                  "type": "string"
                                                                },
                                                                "startsBy": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "user",
                                                                    "assistant"
                                                                  ]
                                                                }
                                                              },
                                                              "required": [
                                                                "id",
                                                                "role"
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "advancedSettings": {
                                                        "type": "object",
                                                        "properties": {
                                                          "temperature": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {}
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "responseMapping": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "valueToExtract": {
                                                              "type": "string",
                                                              "enum": [
                                                                "Message content",
                                                                "Total tokens"
                                                              ]
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id",
                                                            "valueToExtract"
                                                          ]
                                                        }
                                                      },
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "baseUrl": {
                                                        "type": "string"
                                                      },
                                                      "apiVersion": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "task"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "task": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Create image"
                                                        ]
                                                      },
                                                      "prompt": {
                                                        "type": "string"
                                                      },
                                                      "advancedOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                          "size": {
                                                            "type": "string",
                                                            "enum": [
                                                              "256x256",
                                                              "512x512",
                                                              "1024x1024"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "responseMapping": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "valueToExtract": {
                                                              "type": "string",
                                                              "enum": [
                                                                "Image URL"
                                                              ]
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id",
                                                            "valueToExtract"
                                                          ]
                                                        }
                                                      },
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "baseUrl": {
                                                        "type": "string"
                                                      },
                                                      "apiVersion": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "task",
                                                      "advancedOptions",
                                                      "responseMapping"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "baseUrl": {
                                                        "type": "string"
                                                      },
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "task": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Create speech"
                                                        ]
                                                      },
                                                      "model": {
                                                        "type": "string"
                                                      },
                                                      "input": {
                                                        "type": "string"
                                                      },
                                                      "voice": {
                                                        "type": "string",
                                                        "enum": [
                                                          "alloy",
                                                          "echo",
                                                          "fable",
                                                          "onyx",
                                                          "nova",
                                                          "shimmer"
                                                        ]
                                                      },
                                                      "saveUrlInVariableId": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "task"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "$ref": "#/components/schemas/sendEmailBlock"
                                          },
                                          {
                                            "$ref": "#/components/schemas/pixelBlock"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Google Sheets"
                                                ]
                                              },
                                              "options": {
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "sheetId": {
                                                        "type": "string"
                                                      },
                                                      "spreadsheetId": {
                                                        "type": "string"
                                                      },
                                                      "action": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Get data from sheet"
                                                        ]
                                                      },
                                                      "referenceCell": {
                                                        "type": "object",
                                                        "properties": {
                                                          "column": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          },
                                                          "id": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id"
                                                        ]
                                                      },
                                                      "filter": {
                                                        "type": "object",
                                                        "properties": {
                                                          "comparisons": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "column": {
                                                                  "type": "string"
                                                                },
                                                                "comparisonOperator": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Equal to",
                                                                    "Not equal",
                                                                    "Contains",
                                                                    "Does not contain",
                                                                    "Greater than",
                                                                    "Greater or equal to",
                                                                    "Less than",
                                                                    "Less or equal to",
                                                                    "Is set",
                                                                    "Is empty",
                                                                    "Starts with",
                                                                    "Ends with",
                                                                    "Matches regex",
                                                                    "Does not match regex"
                                                                  ]
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "logicalOperator": {
                                                            "type": "string",
                                                            "enum": [
                                                              "OR",
                                                              "AND"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "cellsToExtract": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "column": {
                                                              "type": "string"
                                                            },
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "variableId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "totalRowsToExtract": {
                                                        "type": "string",
                                                        "enum": [
                                                          "All",
                                                          "First",
                                                          "Last",
                                                          "Random"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "action"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "sheetId": {
                                                        "type": "string"
                                                      },
                                                      "spreadsheetId": {
                                                        "type": "string"
                                                      },
                                                      "action": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Insert a row"
                                                        ]
                                                      },
                                                      "cellsToInsert": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "column": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            },
                                                            "id": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "action"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "sheetId": {
                                                        "type": "string"
                                                      },
                                                      "spreadsheetId": {
                                                        "type": "string"
                                                      },
                                                      "action": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Update a row"
                                                        ]
                                                      },
                                                      "cellsToUpsert": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "column": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            },
                                                            "id": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "referenceCell": {
                                                        "type": "object",
                                                        "properties": {
                                                          "column": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          },
                                                          "id": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id"
                                                        ]
                                                      },
                                                      "filter": {
                                                        "type": "object",
                                                        "properties": {
                                                          "comparisons": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "type": "string"
                                                                },
                                                                "column": {
                                                                  "type": "string"
                                                                },
                                                                "comparisonOperator": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                    "Equal to",
                                                                    "Not equal",
                                                                    "Contains",
                                                                    "Does not contain",
                                                                    "Greater than",
                                                                    "Greater or equal to",
                                                                    "Less than",
                                                                    "Less or equal to",
                                                                    "Is set",
                                                                    "Is empty",
                                                                    "Starts with",
                                                                    "Ends with",
                                                                    "Matches regex",
                                                                    "Does not match regex"
                                                                  ]
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id"
                                                              ]
                                                            }
                                                          },
                                                          "logicalOperator": {
                                                            "type": "string",
                                                            "enum": [
                                                              "OR",
                                                              "AND"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "action"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "credentialsId": {
                                                        "type": "string"
                                                      },
                                                      "sheetId": {
                                                        "type": "string"
                                                      },
                                                      "spreadsheetId": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Make.com"
                                                ]
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "variablesForTest": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "responseVariableMapping": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "bodyPath": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "isAdvancedConfig": {
                                                    "type": "boolean"
                                                  },
                                                  "isCustomBody": {
                                                    "type": "boolean"
                                                  },
                                                  "isExecutedOnClient": {
                                                    "type": "boolean"
                                                  },
                                                  "webhook": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "queryParams": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "headers": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "method": {
                                                        "type": "string",
                                                        "enum": [
                                                          "POST",
                                                          "GET",
                                                          "PUT",
                                                          "DELETE",
                                                          "PATCH",
                                                          "HEAD",
                                                          "CONNECT",
                                                          "OPTIONS",
                                                          "TRACE"
                                                        ]
                                                      },
                                                      "url": {
                                                        "type": "string"
                                                      },
                                                      "body": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id"
                                                    ]
                                                  },
                                                  "timeout": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 120
                                                  }
                                                }
                                              },
                                              "webhookId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Pabbly"
                                                ]
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "variablesForTest": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "responseVariableMapping": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "bodyPath": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "isAdvancedConfig": {
                                                    "type": "boolean"
                                                  },
                                                  "isCustomBody": {
                                                    "type": "boolean"
                                                  },
                                                  "isExecutedOnClient": {
                                                    "type": "boolean"
                                                  },
                                                  "webhook": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "queryParams": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "headers": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "method": {
                                                        "type": "string",
                                                        "enum": [
                                                          "POST",
                                                          "GET",
                                                          "PUT",
                                                          "DELETE",
                                                          "PATCH",
                                                          "HEAD",
                                                          "CONNECT",
                                                          "OPTIONS",
                                                          "TRACE"
                                                        ]
                                                      },
                                                      "url": {
                                                        "type": "string"
                                                      },
                                                      "body": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id"
                                                    ]
                                                  },
                                                  "timeout": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 120
                                                  }
                                                }
                                              },
                                              "webhookId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Webhook"
                                                ],
                                                "description": "Legacy name for HTTP Request block"
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "variablesForTest": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "responseVariableMapping": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "bodyPath": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "isAdvancedConfig": {
                                                    "type": "boolean"
                                                  },
                                                  "isCustomBody": {
                                                    "type": "boolean"
                                                  },
                                                  "isExecutedOnClient": {
                                                    "type": "boolean"
                                                  },
                                                  "webhook": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "queryParams": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "headers": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "method": {
                                                        "type": "string",
                                                        "enum": [
                                                          "POST",
                                                          "GET",
                                                          "PUT",
                                                          "DELETE",
                                                          "PATCH",
                                                          "HEAD",
                                                          "CONNECT",
                                                          "OPTIONS",
                                                          "TRACE"
                                                        ]
                                                      },
                                                      "url": {
                                                        "type": "string"
                                                      },
                                                      "body": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id"
                                                    ]
                                                  },
                                                  "timeout": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 120
                                                  }
                                                }
                                              },
                                              "webhookId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "outgoingEdgeId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Zapier"
                                                ]
                                              },
                                              "options": {
                                                "type": "object",
                                                "properties": {
                                                  "variablesForTest": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "responseVariableMapping": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "variableId": {
                                                          "type": "string"
                                                        },
                                                        "bodyPath": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "isAdvancedConfig": {
                                                    "type": "boolean"
                                                  },
                                                  "isCustomBody": {
                                                    "type": "boolean"
                                                  },
                                                  "isExecutedOnClient": {
                                                    "type": "boolean"
                                                  },
                                                  "webhook": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "queryParams": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "headers": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            },
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ]
                                                        }
                                                      },
                                                      "method": {
                                                        "type": "string",
                                                        "enum": [
                                                          "POST",
                                                          "GET",
                                                          "PUT",
                                                          "DELETE",
                                                          "PATCH",
                                                          "HEAD",
                                                          "CONNECT",
                                                          "OPTIONS",
                                                          "TRACE"
                                                        ]
                                                      },
                                                      "url": {
                                                        "type": "string"
                                                      },
                                                      "body": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id"
                                                    ]
                                                  },
                                                  "timeout": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 120
                                                  }
                                                }
                                              },
                                              "webhookId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "type"
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "title",
                                "graphCoordinates",
                                "blocks"
                              ]
                            }
                          },
                          "edges": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "from": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "blockId": {
                                          "type": "string"
                                        },
                                        "itemId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "blockId"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "eventId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "eventId"
                                      ]
                                    }
                                  ]
                                },
                                "to": {
                                  "type": "object",
                                  "properties": {
                                    "groupId": {
                                      "type": "string"
                                    },
                                    "blockId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "groupId"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "from",
                                "to"
                              ]
                            }
                          },
                          "variables": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "isSessionVariable": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "nullable": true,
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "theme": {
                            "$ref": "#/components/schemas/theme"
                          },
                          "settings": {
                            "$ref": "#/components/schemas/settings"
                          },
                          "isPublished": {
                            "type": "boolean"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sharing": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/sharing"
                              }
                            ],
                            "nullable": true
                          },
                          "shareId": {
                            "type": "string",
                            "nullable": true
                          },
                          "resultsTablePreferences": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "columnsOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "columnsVisibility": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "boolean"
                                }
                              },
                              "columnsWidth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number"
                                }
                              }
                            },
                            "required": [
                              "columnsOrder",
                              "columnsVisibility",
                              "columnsWidth"
                            ]
                          },
                          "selectedThemeTemplateId": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "version",
                          "name",
                          "events",
                          "groups",
                          "edges",
                          "variables",
                          "theme",
                          "settings",
                          "isPublished",
                          "icon",
                          "description",
                          "sharing",
                          "shareId"
                        ],
                        "title": "Agent V5"
                      }
                    ]
                  }
                },
                "required": [
                  "workspaceId",
                  "agent"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {
                      "$ref": "#/components/schemas/agentV6"
                    }
                  },
                  "required": [
                    "agent"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tags": {
      "post": {
        "operationId": "tag-createTag",
        "summary": "Create tag",
        "tags": [
          "Tag"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "workspaceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "workspaceId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "color": {
                          "type": "string"
                        },
                        "counter": {
                          "type": "number"
                        },
                        "workspaceId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "color",
                        "workspaceId"
                      ]
                    }
                  },
                  "required": [
                    "tag"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "tag-listTags",
        "summary": "List all tags in a workspace",
        "tags": [
          "Tag"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "color": {
                            "type": "string"
                          },
                          "counter": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "color",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "tags"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "tag-deleteAgentTagsByAgentId",
        "summary": "Delete all relations between a agent and Tags by agent ID",
        "tags": [
          "AgentTag"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deletedCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "deletedCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tags/{id}": {
      "get": {
        "operationId": "tag-getTag",
        "summary": "Get tag by ID",
        "tags": [
          "Tag"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "createdAt"
                      ]
                    }
                  },
                  "required": [
                    "tag"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "tag-updateTag",
        "summary": "Update tag by ID",
        "tags": [
          "Tag"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "color"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "color": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "color"
                      ]
                    }
                  },
                  "required": [
                    "tag"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "tag-deleteTag",
        "summary": "Delete tag by ID",
        "tags": [
          "Tag"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agentTags": {
      "post": {
        "operationId": "tag-createAgentTag",
        "summary": "Create a relation between Agent and Tag",
        "tags": [
          "AgentTag"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "string"
                  },
                  "tagId": {
                    "type": "string"
                  }
                },
                "required": [
                  "agentId",
                  "tagId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agentTag": {
                      "type": "object",
                      "properties": {
                        "agentId": {
                          "type": "string"
                        },
                        "tagId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "agentId",
                        "tagId"
                      ]
                    }
                  },
                  "required": [
                    "agentTag"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/domains": {
      "get": {
        "operationId": "domains-listDomains",
        "summary": "List domains",
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique identifier of the domain."
                      },
                      "slug": {
                        "type": "string",
                        "description": "The domain name.",
                        "example": "acme.com"
                      },
                      "verified": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether the domain is verified."
                      },
                      "primary": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether the domain is the primary domain for the workspace."
                      },
                      "archived": {
                        "type": "boolean",
                        "description": "Whether the domain is archived.",
                        "default": false
                      },
                      "placeholder": {
                        "type": "string",
                        "nullable": true,
                        "description": "Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.",
                        "example": "https://release0.com/"
                      },
                      "expiredUrl": {
                        "type": "string",
                        "nullable": true,
                        "description": "The URL to redirect to when a link under this domain has expired.",
                        "example": "https://acme.com/expired"
                      },
                      "notFoundUrl": {
                        "type": "string",
                        "nullable": true,
                        "description": "The URL to redirect to when a link under this domain doesn't exist.",
                        "example": "https://acme.com/not-found"
                      },
                      "logo": {
                        "type": "string",
                        "nullable": true,
                        "description": "The logo of the domain."
                      },
                      "createdAt": {
                        "type": "string",
                        "description": "The date the domain was created."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The date the domain was last updated."
                      },
                      "registeredDomain": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the registered domain record."
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The date the domain was created."
                          },
                          "expiresAt": {
                            "type": "string",
                            "description": "The date the domain expires."
                          }
                        },
                        "required": [
                          "id",
                          "createdAt",
                          "expiresAt"
                        ],
                        "description": "The registered domain record."
                      }
                    },
                    "required": [
                      "id",
                      "slug",
                      "verified",
                      "primary",
                      "archived",
                      "placeholder",
                      "expiredUrl",
                      "notFoundUrl",
                      "logo",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "domains-createDomain",
        "summary": "Create domain",
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "domain": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId",
                  "domain"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the domain."
                            },
                            "slug": {
                              "type": "string",
                              "description": "The domain name.",
                              "example": "acme.com"
                            },
                            "verified": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether the domain is verified."
                            },
                            "primary": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether the domain is the primary domain for the workspace."
                            },
                            "archived": {
                              "type": "boolean",
                              "description": "Whether the domain is archived.",
                              "default": false
                            },
                            "placeholder": {
                              "type": "string",
                              "nullable": true,
                              "description": "Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.",
                              "example": "https://release0.com/"
                            },
                            "expiredUrl": {
                              "type": "string",
                              "nullable": true,
                              "description": "The URL to redirect to when a link under this domain has expired.",
                              "example": "https://acme.com/expired"
                            },
                            "notFoundUrl": {
                              "type": "string",
                              "nullable": true,
                              "description": "The URL to redirect to when a link under this domain doesn't exist.",
                              "example": "https://acme.com/not-found"
                            },
                            "logo": {
                              "type": "string",
                              "nullable": true,
                              "description": "The logo of the domain."
                            },
                            "createdAt": {
                              "type": "string",
                              "description": "The date the domain was created."
                            },
                            "updatedAt": {
                              "type": "string",
                              "description": "The date the domain was last updated."
                            },
                            "registeredDomain": {
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the registered domain record."
                                },
                                "createdAt": {
                                  "type": "string",
                                  "description": "The date the domain was created."
                                },
                                "expiresAt": {
                                  "type": "string",
                                  "description": "The date the domain expires."
                                }
                              },
                              "required": [
                                "id",
                                "createdAt",
                                "expiresAt"
                              ],
                              "description": "The registered domain record."
                            }
                          },
                          "required": [
                            "id",
                            "slug",
                            "verified",
                            "primary",
                            "archived",
                            "placeholder",
                            "expiredUrl",
                            "notFoundUrl",
                            "logo",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "status": {
                          "type": "number",
                          "enum": [
                            201
                          ]
                        }
                      },
                      "required": [
                        "domain",
                        "status"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "enum": [
                            422
                          ]
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/domains/{name}/verify": {
      "get": {
        "operationId": "domains-verifyDomain",
        "summary": "Verify domain",
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/domains/{domain}/validate": {
      "get": {
        "operationId": "domains-validateDomain",
        "summary": "Validate domain",
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "invalid",
                        "available",
                        "checking",
                        "conflict",
                        "has site",
                        "available"
                      ]
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/domains/{oldDomain}": {
      "patch": {
        "operationId": "domains-updateDomain",
        "summary": "Update domain",
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "oldDomain",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "domain": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "primary": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "workspaceId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the domain."
                            },
                            "slug": {
                              "type": "string",
                              "description": "The domain name.",
                              "example": "acme.com"
                            },
                            "verified": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether the domain is verified."
                            },
                            "primary": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether the domain is the primary domain for the workspace."
                            },
                            "archived": {
                              "type": "boolean",
                              "description": "Whether the domain is archived.",
                              "default": false
                            },
                            "placeholder": {
                              "type": "string",
                              "nullable": true,
                              "description": "Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.",
                              "example": "https://release0.com/"
                            },
                            "expiredUrl": {
                              "type": "string",
                              "nullable": true,
                              "description": "The URL to redirect to when a link under this domain has expired.",
                              "example": "https://acme.com/expired"
                            },
                            "notFoundUrl": {
                              "type": "string",
                              "nullable": true,
                              "description": "The URL to redirect to when a link under this domain doesn't exist.",
                              "example": "https://acme.com/not-found"
                            },
                            "logo": {
                              "type": "string",
                              "nullable": true,
                              "description": "The logo of the domain."
                            },
                            "createdAt": {
                              "type": "string",
                              "description": "The date the domain was created."
                            },
                            "updatedAt": {
                              "type": "string",
                              "description": "The date the domain was last updated."
                            },
                            "registeredDomain": {
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the registered domain record."
                                },
                                "createdAt": {
                                  "type": "string",
                                  "description": "The date the domain was created."
                                },
                                "expiresAt": {
                                  "type": "string",
                                  "description": "The date the domain expires."
                                }
                              },
                              "required": [
                                "id",
                                "createdAt",
                                "expiresAt"
                              ],
                              "description": "The registered domain record."
                            }
                          },
                          "required": [
                            "id",
                            "slug",
                            "verified",
                            "primary",
                            "archived",
                            "placeholder",
                            "expiredUrl",
                            "notFoundUrl",
                            "logo",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "status": {
                          "type": "number",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "domain",
                        "status"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "enum": [
                            422
                          ]
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/domains/{domain}": {
      "delete": {
        "operationId": "domains-deleteDomain",
        "summary": "Delete domain",
        "tags": [
          "Domains"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "enum": [
                        204
                      ]
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/webhookBlocks": {
      "get": {
        "operationId": "httpRequest-listHttpRequestBlocks",
        "summary": "List HTTP request blocks",
        "description": "Returns a list of all the HTTP request blocks that you can subscribe to.",
        "tags": [
          "HTTP request"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhookBlocks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Webhook",
                              "Zapier",
                              "Make.com",
                              "Pabbly"
                            ]
                          },
                          "label": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "label"
                        ]
                      }
                    }
                  },
                  "required": [
                    "webhookBlocks"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/webhookBlocks/{blockId}/getResultSchema": {
      "get": {
        "operationId": "httpRequest-getResultSchema",
        "summary": "Get result schema for integrations",
        "description": "Returns schema with sample result for http request block to help you anticipate how the webhook will behave.",
        "tags": [
          "HTTP request"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "blockId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "Can contain any fields."
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/webhookBlocks/{blockId}/subscribe": {
      "post": {
        "operationId": "httpRequest-subscribeHttpRequest",
        "summary": "Subscribe to HTTP request block",
        "tags": [
          "HTTP request"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "blockId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/webhookBlocks/{blockId}/unsubscribe": {
      "post": {
        "operationId": "httpRequest-unsubscribeHttpRequest",
        "summary": "Unsubscribe from HTTP request block",
        "tags": [
          "HTTP request"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "blockId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/results": {
      "get": {
        "operationId": "results-getResults",
        "summary": "List results ordered by descending creation date",
        "tags": [
          "Results"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeFilter",
            "schema": {
              "type": "string",
              "enum": [
                "today",
                "last7Days",
                "last30Days",
                "monthToDate",
                "lastMonth",
                "yearToDate",
                "allTime"
              ],
              "default": "last7Days"
            }
          },
          {
            "in": "query",
            "name": "timeZone",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "description": "The end date of creation to retrieve results from.",
            "schema": {
              "type": "string",
              "description": "The end date of creation to retrieve results from."
            }
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "agentId": {
                            "type": "string"
                          },
                          "workspaceId": {
                            "type": "string"
                          },
                          "variables": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "isSessionVariable": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "value"
                              ]
                            }
                          },
                          "isCompleted": {
                            "type": "boolean"
                          },
                          "hasStarted": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "isArchived": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "lastChatSessionId": {
                            "type": "string",
                            "nullable": true
                          },
                          "updatedAt": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "date-time"
                              }
                            ]
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "ip": {
                                "type": "string"
                              },
                              "location": {
                                "type": "object",
                                "properties": {
                                  "continent": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "region": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "latitude": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  "longitude": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  "vercel_region": {
                                    "type": "string"
                                  }
                                }
                              },
                              "device": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "vendor": {
                                    "type": "string"
                                  },
                                  "model": {
                                    "type": "string"
                                  }
                                }
                              },
                              "browser": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  }
                                }
                              },
                              "os": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  }
                                }
                              },
                              "url": {
                                "type": "string"
                              },
                              "bot": {
                                "type": "boolean"
                              },
                              "qr": {
                                "type": "boolean"
                              },
                              "referer": {
                                "type": "string"
                              }
                            }
                          },
                          "answers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "type": "string"
                                },
                                "blockId": {
                                  "type": "string"
                                },
                                "isSecure": {
                                  "type": "boolean"
                                },
                                "content": {
                                  "type": "string"
                                },
                                "attachedFileUrls": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "createdAt",
                                "blockId",
                                "content"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "createdAt",
                          "isCompleted",
                          "hasStarted",
                          "lastChatSessionId",
                          "answers"
                        ]
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "results"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "results-deleteResults",
        "summary": "Delete results",
        "tags": [
          "Results"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[Where to find my agentId?](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my agentId?](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "resultIds",
            "description": "Comma separated list of ids. If not provided, all results will be deleted. ⚠️",
            "schema": {
              "type": "string",
              "description": "Comma separated list of ids. If not provided, all results will be deleted. ⚠️"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/results/{resultId}": {
      "get": {
        "operationId": "results-getResult",
        "summary": "Get result by id",
        "tags": [
          "Results"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where can I find my agent’s ID? 👉 Check this guide! 🔍✨](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "resultId",
            "description": "The `resultId` is returned by the /startChat endpoint or you can find it by listing results with `/results` endpoint",
            "schema": {
              "type": "string",
              "description": "The `resultId` is returned by the /startChat endpoint or you can find it by listing results with `/results` endpoint"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "agentId": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "variables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "isSessionVariable": {
                                "type": "boolean"
                              },
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "value"
                            ]
                          }
                        },
                        "isCompleted": {
                          "type": "boolean"
                        },
                        "hasStarted": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "isArchived": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "lastChatSessionId": {
                          "type": "string",
                          "nullable": true
                        },
                        "updatedAt": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "ip": {
                              "type": "string"
                            },
                            "location": {
                              "type": "object",
                              "properties": {
                                "continent": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                },
                                "region": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "latitude": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "longitude": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "vercel_region": {
                                  "type": "string"
                                }
                              }
                            },
                            "device": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "vendor": {
                                  "type": "string"
                                },
                                "model": {
                                  "type": "string"
                                }
                              }
                            },
                            "browser": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "version": {
                                  "type": "string"
                                }
                              }
                            },
                            "os": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "version": {
                                  "type": "string"
                                }
                              }
                            },
                            "url": {
                              "type": "string"
                            },
                            "bot": {
                              "type": "boolean"
                            },
                            "qr": {
                              "type": "boolean"
                            },
                            "referer": {
                              "type": "string"
                            }
                          }
                        },
                        "answers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string"
                              },
                              "blockId": {
                                "type": "string"
                              },
                              "isSecure": {
                                "type": "boolean"
                              },
                              "content": {
                                "type": "string"
                              },
                              "attachedFileUrls": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "createdAt",
                              "blockId",
                              "content"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "isCompleted",
                        "hasStarted",
                        "lastChatSessionId",
                        "answers"
                      ]
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/results/{resultId}/logs": {
      "get": {
        "operationId": "results-getResultLogs",
        "summary": "List result logs",
        "tags": [
          "Results"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "[Where to find my agentId?](../how-to#how-to-find-my-agentid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my agentId?](../how-to#how-to-find-my-agentid)"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "resultId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "resultId": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "details": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "createdAt",
                          "resultId",
                          "status",
                          "description",
                          "details"
                        ]
                      }
                    }
                  },
                  "required": [
                    "logs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/credentials": {
      "post": {
        "operationId": "credentials-createCredentials",
        "summary": "Create credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "allOf": [
                      {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "live": {
                                    "type": "object",
                                    "properties": {
                                      "secretKey": {
                                        "type": "string"
                                      },
                                      "publicKey": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "secretKey",
                                      "publicKey"
                                    ]
                                  },
                                  "test": {
                                    "type": "object",
                                    "properties": {
                                      "secretKey": {
                                        "type": "string"
                                      },
                                      "publicKey": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "live",
                                  "test"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "stripe"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "isTlsEnabled": {
                                    "type": "boolean"
                                  },
                                  "port": {
                                    "type": "number"
                                  },
                                  "from": {
                                    "type": "object",
                                    "properties": {
                                      "email": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "port",
                                  "from"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "smtp"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "refresh_token": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "expiry_date": {
                                    "type": "number",
                                    "nullable": true
                                  },
                                  "access_token": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "token_type": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "id_token": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "scope": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "google sheets"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "systemUserAccessToken": {
                                    "type": "string"
                                  },
                                  "phoneNumberId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "systemUserAccessToken",
                                  "phoneNumberId"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "whatsApp"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "apiKey"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "google maps"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  },
                                  "baseUrl": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "openai"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "chat-node"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiEndpoint": {
                                    "type": "string"
                                  },
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "dify-ai"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "mistral"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "elevenlabs"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "anthropic"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "together-ai"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "open-router"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "baseUrl": {
                                    "type": "string"
                                  },
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "nocodb"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "segment"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "apiKey": {
                                    "type": "string"
                                  },
                                  "baseUrl": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "groq"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "conversationsKeyId": {
                                    "type": "string"
                                  },
                                  "conversationsSecretKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "zendesk"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "apiKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "supabase"
                                ]
                              },
                              "workspaceId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "workspaceId",
                              "name"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "credentials"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentialsId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialsId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "credentials-listCredentials",
        "summary": "List workspace credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "anthropic",
                "chat-node",
                "dify-ai",
                "elevenlabs",
                "google maps",
                "google sheets",
                "groq",
                "mistral",
                "nocodb",
                "open-router",
                "openai",
                "segment",
                "smtp",
                "stripe",
                "supabase",
                "together-ai",
                "whatsApp",
                "zendesk"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "anthropic",
                              "chat-node",
                              "dify-ai",
                              "elevenlabs",
                              "google maps",
                              "google sheets",
                              "groq",
                              "mistral",
                              "nocodb",
                              "open-router",
                              "openai",
                              "segment",
                              "smtp",
                              "stripe",
                              "supabase",
                              "together-ai",
                              "whatsApp",
                              "zendesk"
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "credentials"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/credentials/{credentialsId}": {
      "get": {
        "operationId": "credentials-getCredentials",
        "summary": "Get credentials data",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "credentialsId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "data": {}
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "credentials-updateCredentials",
        "summary": "Create credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "credentialsId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "live": {
                                "type": "object",
                                "properties": {
                                  "secretKey": {
                                    "type": "string"
                                  },
                                  "publicKey": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "secretKey",
                                  "publicKey"
                                ]
                              },
                              "test": {
                                "type": "object",
                                "properties": {
                                  "secretKey": {
                                    "type": "string"
                                  },
                                  "publicKey": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "required": [
                              "live",
                              "test"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "stripe"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "host": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "isTlsEnabled": {
                                "type": "boolean"
                              },
                              "port": {
                                "type": "number"
                              },
                              "from": {
                                "type": "object",
                                "properties": {
                                  "email": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "required": [
                              "port",
                              "from"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "smtp"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "refresh_token": {
                                "type": "string",
                                "nullable": true
                              },
                              "expiry_date": {
                                "type": "number",
                                "nullable": true
                              },
                              "access_token": {
                                "type": "string",
                                "nullable": true
                              },
                              "token_type": {
                                "type": "string",
                                "nullable": true
                              },
                              "id_token": {
                                "type": "string",
                                "nullable": true
                              },
                              "scope": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "google sheets"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "apiKey"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "google maps"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "systemUserAccessToken": {
                                "type": "string"
                              },
                              "phoneNumberId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "systemUserAccessToken",
                              "phoneNumberId"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "whatsApp"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              },
                              "baseUrl": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "openai"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "chat-node"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiEndpoint": {
                                "type": "string"
                              },
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "dify-ai"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "mistral"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "elevenlabs"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "anthropic"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "together-ai"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "open-router"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "baseUrl": {
                                "type": "string"
                              },
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "nocodb"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "segment"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "apiKey": {
                                "type": "string"
                              },
                              "baseUrl": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "groq"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "conversationsKeyId": {
                                "type": "string"
                              },
                              "conversationsSecretKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "zendesk"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string"
                              },
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "supabase"
                            ]
                          },
                          "workspaceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "data",
                          "type",
                          "workspaceId"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "credentials"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentialsId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialsId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/credentials/:credentialsId": {
      "delete": {
        "operationId": "credentials-deleteCredentials",
        "summary": "Delete credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "credentialsId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentialsId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialsId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/themeTemplates": {
      "get": {
        "operationId": "theme-listThemeTemplates",
        "summary": "List theme templates",
        "tags": [
          "Theme template"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "themeTemplates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "theme": {
                            "$ref": "#/components/schemas/theme"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "theme"
                        ]
                      }
                    }
                  },
                  "required": [
                    "themeTemplates"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/themeTemplates/{themeTemplateId}": {
      "put": {
        "operationId": "theme-saveThemeTemplate",
        "summary": "Save theme template",
        "tags": [
          "Theme template"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "themeTemplateId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "theme": {
                    "$ref": "#/components/schemas/theme"
                  }
                },
                "required": [
                  "workspaceId",
                  "name",
                  "theme"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "themeTemplate": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "theme": {
                          "$ref": "#/components/schemas/theme"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "theme",
                        "workspaceId",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "themeTemplate"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "theme-deleteThemeTemplate",
        "summary": "Delete a theme template",
        "tags": [
          "Theme template"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "themeTemplateId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "themeTemplate": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "theme": {
                          "$ref": "#/components/schemas/theme"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "theme",
                        "workspaceId",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "themeTemplate"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billing/invoices": {
      "get": {
        "operationId": "billing-listInvoices",
        "summary": "List invoices",
        "tags": [
          "Billing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceId",
            "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "date": {
                            "type": "number",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "url",
                          "amount",
                          "currency",
                          "date"
                        ]
                      }
                    }
                  },
                  "required": [
                    "invoices"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billing/subscription": {
      "get": {
        "operationId": "billing-getSubscription",
        "summary": "List invoices",
        "tags": [
          "Billing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscription": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currentBillingPeriod": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "eur",
                                "usd"
                              ]
                            },
                            "cancelDate": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "past_due"
                              ]
                            }
                          },
                          "required": [
                            "currentBillingPeriod",
                            "currency",
                            "status"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "required": [
                    "subscription"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billing/usage": {
      "get": {
        "operationId": "billing-getUsage",
        "summary": "Get current plan usage",
        "tags": [
          "Billing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceId",
            "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)",
            "schema": {
              "type": "string",
              "description": "[🚀 Where to find my workspace ID?](../how-to#how-to-find-my-workspaceid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalChatsUsed": {
                      "type": "number"
                    },
                    "resetsAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "totalChatsUsed",
                    "resetsAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/collaborators": {
      "get": {
        "operationId": "collaborators-getCollaborators",
        "summary": "Get collaborators",
        "tags": [
          "Collaborators"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collaborators": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "READ",
                              "WRITE",
                              "FULL_ACCESS"
                            ]
                          },
                          "userId": {
                            "type": "string"
                          },
                          "agentId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "userId",
                          "agentId",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "collaborators"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agentId}/whatsapp/start-preview": {
      "post": {
        "operationId": "whatsApp-startWhatsAppPreview",
        "summary": "Start preview",
        "tags": [
          "WhatsApp"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "string",
                    "minLength": 1
                  },
                  "startFrom": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "group"
                            ]
                          },
                          "groupId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "groupId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "event"
                            ]
                          },
                          "eventId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "eventId"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "to"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/whatsapp/preview/webhook": {
      "get": {
        "operationId": "whatsApp-subscribePreviewWebhook",
        "summary": "Subscribe webhook",
        "tags": [
          "WhatsApp"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "hub.challenge",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "hub.verify_token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "whatsApp-receiveMessagePreview",
        "summary": "Message webhook",
        "tags": [
          "WhatsApp"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entry": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "changes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "object",
                                "properties": {
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "phone_number_id": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "phone_number_id"
                                    ]
                                  },
                                  "contacts": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "profile": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "profile"
                                      ]
                                    }
                                  },
                                  "messages": {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "text"
                                              ]
                                            },
                                            "text": {
                                              "type": "object",
                                              "properties": {
                                                "body": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "body"
                                              ]
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "text",
                                            "timestamp"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "button"
                                              ]
                                            },
                                            "button": {
                                              "type": "object",
                                              "properties": {
                                                "text": {
                                                  "type": "string"
                                                },
                                                "payload": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "text",
                                                "payload"
                                              ]
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "button",
                                            "timestamp"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "interactive"
                                              ]
                                            },
                                            "interactive": {
                                              "type": "object",
                                              "properties": {
                                                "button_reply": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "title": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "title"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "button_reply"
                                              ]
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "interactive",
                                            "timestamp"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "image"
                                              ]
                                            },
                                            "image": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "caption": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "image",
                                            "timestamp"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "video"
                                              ]
                                            },
                                            "video": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "caption": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "video",
                                            "timestamp"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "audio"
                                              ]
                                            },
                                            "audio": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "audio",
                                            "timestamp"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "document"
                                              ]
                                            },
                                            "document": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "caption": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "document",
                                            "timestamp"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "location"
                                              ]
                                            },
                                            "location": {
                                              "type": "object",
                                              "properties": {
                                                "latitude": {
                                                  "type": "number"
                                                },
                                                "longitude": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "latitude",
                                                "longitude"
                                              ]
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "location",
                                            "timestamp"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "webhook"
                                              ]
                                            },
                                            "webhook": {
                                              "type": "object",
                                              "properties": {
                                                "data": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "timestamp": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "from",
                                            "type",
                                            "webhook",
                                            "timestamp"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "recipient_id": {
                                          "type": "string"
                                        },
                                        "errors": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "code": {
                                                "type": "number"
                                              },
                                              "title": {
                                                "type": "string"
                                              },
                                              "error_data": {
                                                "type": "object",
                                                "properties": {
                                                  "details": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "details"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "code",
                                              "title",
                                              "error_data"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "recipient_id"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "metadata"
                                ]
                              }
                            },
                            "required": [
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "changes"
                      ]
                    }
                  }
                },
                "required": [
                  "entry"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "textBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text"
            ]
          },
          "content": {
            "type": "object",
            "properties": {
              "html": {
                "type": "string"
              },
              "richText": {
                "type": "array",
                "items": {}
              },
              "plainText": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Text"
      },
      "imageBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "image"
            ]
          },
          "content": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "clickLink": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "alt": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Image"
      },
      "videoBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "video"
            ]
          },
          "content": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "url",
                  "youtube",
                  "vimeo",
                  "tiktok",
                  "gumlet"
                ]
              },
              "height": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {}
                ]
              },
              "aspectRatio": {
                "type": "string"
              },
              "maxWidth": {
                "type": "string"
              },
              "queryParamsStr": {
                "type": "string"
              },
              "areControlsDisplayed": {
                "type": "boolean"
              },
              "isAutoplayEnabled": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Video"
      },
      "embedBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "embed"
            ]
          },
          "content": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "height": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {}
                ]
              },
              "waitForEvent": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "saveDataInVariableId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Embed"
      },
      "audioBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "audio"
            ]
          },
          "content": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "isAutoplayEnabled": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Audio"
      },
      "textInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "variableId": {
                "type": "string"
              },
              "isLong": {
                "type": "boolean"
              },
              "isPassword": {
                "type": "boolean"
              },
              "isRequired": {
                "type": "boolean"
              },
              "audioClip": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "saveVariableId": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "Auto",
                      "Public",
                      "Private"
                    ]
                  }
                }
              },
              "attachments": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "saveVariableId": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "Auto",
                      "Public",
                      "Private"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Text"
      },
      "email": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "email input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "retryMessageContent": {
                "type": "string"
              },
              "isRequired": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Email"
      },
      "address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "address input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "isRequired": {
                "type": "boolean"
              },
              "restrictToList": {
                "type": "boolean"
              },
              "credentialsId": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Address"
      },
      "autocomplete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "autocomplete input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "isRequired": {
                "type": "boolean"
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                }
              },
              "maxSuggestions": {
                "type": "number",
                "minimum": 1,
                "maximum": 20
              },
              "enableFuzzySearch": {
                "type": "boolean"
              },
              "minSearchLength": {
                "type": "number",
                "minimum": 1,
                "maximum": 10
              },
              "keyVariableId": {
                "type": "string"
              },
              "restrictToList": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Autocomplete"
      },
      "numberInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "number input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "min": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {}
                ]
              },
              "max": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {}
                ]
              },
              "step": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {}
                ]
              },
              "isRequired": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Number"
      },
      "url": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "url input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "retryMessageContent": {
                "type": "string"
              },
              "isRequired": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "URL"
      },
      "phoneNumberInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "phone number input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "retryMessageContent": {
                "type": "string"
              },
              "defaultCountryCode": {
                "type": "string"
              },
              "isRequired": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Phone number"
      },
      "dateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "date input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "button": {
                    "type": "string"
                  },
                  "from": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  }
                }
              },
              "hasTime": {
                "type": "boolean"
              },
              "isRange": {
                "type": "boolean"
              },
              "format": {
                "type": "string"
              },
              "min": {
                "type": "string"
              },
              "max": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Date"
      },
      "paymentInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "payment input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "Stripe"
                ]
              },
              "labels": {
                "type": "object",
                "properties": {
                  "button": {
                    "type": "string"
                  },
                  "success": {
                    "type": "string"
                  }
                }
              },
              "additionalInformation": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "country": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "credentialsId": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              },
              "retryMessageContent": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Payment"
      },
      "rating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "rating input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "buttonType": {
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "Icons"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "Numbers"
                    ]
                  }
                ]
              },
              "length": {
                "type": "number"
              },
              "startsAt": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {}
                ]
              },
              "labels": {
                "type": "object",
                "properties": {
                  "left": {
                    "type": "string"
                  },
                  "right": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "customIcon": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "svg": {
                    "type": "string"
                  }
                }
              },
              "isOneClickSubmitEnabled": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Rating"
      },
      "buttonsInputV5": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "choice input"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "blockId": {
                  "type": "string"
                },
                "outgoingEdgeId": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "displayCondition": {
                  "type": "object",
                  "properties": {
                    "isEnabled": {
                      "type": "boolean"
                    },
                    "condition": {
                      "type": "object",
                      "properties": {
                        "logicalOperator": {
                          "type": "string",
                          "enum": [
                            "OR",
                            "AND"
                          ]
                        },
                        "comparisons": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "variableId": {
                                "type": "string"
                              },
                              "comparisonOperator": {
                                "type": "string",
                                "enum": [
                                  "Equal to",
                                  "Not equal",
                                  "Contains",
                                  "Does not contain",
                                  "Greater than",
                                  "Greater or equal to",
                                  "Less than",
                                  "Less or equal to",
                                  "Is set",
                                  "Is empty",
                                  "Starts with",
                                  "Ends with",
                                  "Matches regex",
                                  "Does not match regex"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "isMultipleChoice": {
                "type": "boolean"
              },
              "buttonLabel": {
                "type": "string"
              },
              "dynamicVariableId": {
                "type": "string"
              },
              "isSearchable": {
                "type": "boolean"
              },
              "searchInputPlaceholder": {
                "type": "string"
              },
              "areInitialSearchButtonsVisible": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "items"
        ],
        "title": "Buttons v5"
      },
      "fileInputV5": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "file input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "isRequired": {
                "type": "boolean"
              },
              "isMultipleAllowed": {
                "type": "boolean"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  },
                  "clear": {
                    "type": "string"
                  },
                  "skip": {
                    "type": "string"
                  },
                  "success": {
                    "type": "object",
                    "properties": {
                      "single": {
                        "type": "string"
                      },
                      "multiple": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "sizeLimit": {
                "type": "number"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "Auto",
                  "Public",
                  "Private"
                ]
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "File input v5"
      },
      "pictureChoiceV5": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "image choice"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "blockId": {
                  "type": "string"
                },
                "outgoingEdgeId": {
                  "type": "string"
                },
                "pictureSrc": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "displayCondition": {
                  "type": "object",
                  "properties": {
                    "isEnabled": {
                      "type": "boolean"
                    },
                    "condition": {
                      "type": "object",
                      "properties": {
                        "logicalOperator": {
                          "type": "string",
                          "enum": [
                            "OR",
                            "AND"
                          ]
                        },
                        "comparisons": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "variableId": {
                                "type": "string"
                              },
                              "comparisonOperator": {
                                "type": "string",
                                "enum": [
                                  "Equal to",
                                  "Not equal",
                                  "Contains",
                                  "Does not contain",
                                  "Greater than",
                                  "Greater or equal to",
                                  "Less than",
                                  "Less or equal to",
                                  "Is set",
                                  "Is empty",
                                  "Starts with",
                                  "Ends with",
                                  "Matches regex",
                                  "Does not match regex"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "isMultipleChoice": {
                "type": "boolean"
              },
              "showTitle": {
                "type": "boolean"
              },
              "isSearchable": {
                "type": "boolean"
              },
              "buttonLabel": {
                "type": "string"
              },
              "searchInputPlaceholder": {
                "type": "string"
              },
              "dynamicItems": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "titlesVariableId": {
                    "type": "string"
                  },
                  "descriptionsVariableId": {
                    "type": "string"
                  },
                  "pictureSrcsVariableId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "items"
        ],
        "title": "Picture choice v5"
      },
      "scriptLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Code"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "isExecutedOnClient": {
                "type": "boolean"
              },
              "shouldExecuteInParentContext": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Script"
      },
      "redirectLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Redirect"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "isNewTab": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Redirect"
      },
      "setVariableLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Set variable"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "variableId": {
                    "type": "string"
                  },
                  "isExecutedOnClient": {
                    "type": "boolean"
                  },
                  "expressionToEvaluate": {
                    "type": "string"
                  },
                  "isCode": {
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "variableId": {
                    "type": "string"
                  },
                  "isExecutedOnClient": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Now",
                      "Yesterday",
                      "Tomorrow"
                    ]
                  },
                  "timeZone": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "variableId": {
                    "type": "string"
                  },
                  "isExecutedOnClient": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Today",
                      "Moment of the day",
                      "Empty",
                      "Environment name",
                      "User ID",
                      "Result ID",
                      "Random ID",
                      "Phone number",
                      "Contact name",
                      "Transcript"
                    ]
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "variableId": {
                    "type": "string"
                  },
                  "isExecutedOnClient": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Custom"
                    ]
                  },
                  "expressionToEvaluate": {
                    "type": "string"
                  },
                  "isCode": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "variableId": {
                    "type": "string"
                  },
                  "isExecutedOnClient": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Map item with same index"
                    ]
                  },
                  "mapListItemParams": {
                    "type": "object",
                    "properties": {
                      "baseItemVariableId": {
                        "type": "string"
                      },
                      "baseListVariableId": {
                        "type": "string"
                      },
                      "targetListVariableId": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "variableId": {
                    "type": "string"
                  },
                  "isExecutedOnClient": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Append value(s)"
                    ]
                  },
                  "item": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "variableId": {
                    "type": "string"
                  },
                  "isExecutedOnClient": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Pop",
                      "Shift"
                    ]
                  },
                  "saveItemInVariableId": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Set variable"
      },
      "AgentLinkLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Agent link"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "string"
              },
              "groupId": {
                "type": "string"
              },
              "mergeResults": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Agent link"
      },
      "waitLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Wait"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "secondsToWaitFor": {
                "type": "string"
              },
              "shouldPause": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Wait"
      },
      "jumpLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Jump"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "groupId": {
                "type": "string"
              },
              "blockId": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Jump"
      },
      "chatwootBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Chatwoot"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "task": {
                "type": "string",
                "enum": [
                  "Show widget",
                  "Close widget"
                ]
              },
              "baseUrl": {
                "type": "string"
              },
              "websiteToken": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "avatarUrl": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Chatwoot"
      },
      "googleAnalyticsBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Google Analytics"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "trackingId": {
                "type": "string"
              },
              "category": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "value": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {}
                ]
              },
              "sendTo": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Google Analytics"
      },
      "sendEmailBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Email"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "credentialsId": {
                "type": "string"
              },
              "isCustomBody": {
                "type": "boolean"
              },
              "isBodyCode": {
                "type": "boolean"
              },
              "recipients": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "subject": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "replyTo": {
                "type": "string"
              },
              "cc": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bcc": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "attachmentsVariableId": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Send email"
      },
      "pixelBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Pixel"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "pixelId": {
                    "type": "string"
                  },
                  "isInitSkip": {
                    "type": "boolean"
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "value": {}
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "pixelId": {
                    "type": "string"
                  },
                  "isInitSkip": {
                    "type": "boolean"
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "value": {}
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "eventType": {
                    "type": "string",
                    "enum": [
                      "Lead",
                      "Contact",
                      "CompleteRegistration",
                      "Schedule",
                      "SubmitApplication",
                      "ViewContent",
                      "AddPaymentInfo",
                      "AddToCart",
                      "AddToWishlist",
                      "CustomizeProduct",
                      "Donate",
                      "FindLocation",
                      "InitiateCheckout",
                      "Purchase",
                      "Search",
                      "StartTrial",
                      "Subscribe"
                    ]
                  }
                },
                "required": [
                  "eventType"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "pixelId": {
                    "type": "string"
                  },
                  "isInitSkip": {
                    "type": "boolean"
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "value": {}
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "eventType": {
                    "type": "string",
                    "enum": [
                      "Custom"
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "eventType"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Pixel"
      },
      "groupV6": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "graphCoordinates": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            },
            "required": [
              "x",
              "y"
            ]
          },
          "blocks": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "outgoingEdgeId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "start"
                      ]
                    },
                    "label": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "label"
                  ]
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/textBlock"
                    },
                    {
                      "$ref": "#/components/schemas/imageBlock"
                    },
                    {
                      "$ref": "#/components/schemas/videoBlock"
                    },
                    {
                      "$ref": "#/components/schemas/embedBlock"
                    },
                    {
                      "$ref": "#/components/schemas/audioBlock"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text": "#/components/schemas/textBlock",
                      "image": "#/components/schemas/imageBlock",
                      "video": "#/components/schemas/videoBlock",
                      "embed": "#/components/schemas/embedBlock",
                      "audio": "#/components/schemas/audioBlock"
                    }
                  }
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/textInput"
                    },
                    {
                      "$ref": "#/components/schemas/email"
                    },
                    {
                      "$ref": "#/components/schemas/address"
                    },
                    {
                      "$ref": "#/components/schemas/autocomplete"
                    },
                    {
                      "$ref": "#/components/schemas/numberInput"
                    },
                    {
                      "$ref": "#/components/schemas/url"
                    },
                    {
                      "$ref": "#/components/schemas/phoneNumberInput"
                    },
                    {
                      "$ref": "#/components/schemas/dateInput"
                    },
                    {
                      "$ref": "#/components/schemas/paymentInput"
                    },
                    {
                      "$ref": "#/components/schemas/rating"
                    },
                    {
                      "$ref": "#/components/schemas/buttonsInput"
                    },
                    {
                      "$ref": "#/components/schemas/fileInput"
                    },
                    {
                      "$ref": "#/components/schemas/pictureChoice"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text input": "#/components/schemas/textInput",
                      "email input": "#/components/schemas/email",
                      "address input": "#/components/schemas/address",
                      "autocomplete input": "#/components/schemas/autocomplete",
                      "number input": "#/components/schemas/numberInput",
                      "url input": "#/components/schemas/url",
                      "phone number input": "#/components/schemas/phoneNumberInput",
                      "date input": "#/components/schemas/dateInput",
                      "payment input": "#/components/schemas/paymentInput",
                      "rating input": "#/components/schemas/rating",
                      "choice input": "#/components/schemas/buttonsInput",
                      "file input": "#/components/schemas/fileInput",
                      "image choice": "#/components/schemas/pictureChoice"
                    }
                  }
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/scriptLogic"
                    },
                    {
                      "$ref": "#/components/schemas/redirectLogic"
                    },
                    {
                      "$ref": "#/components/schemas/setVariableLogic"
                    },
                    {
                      "$ref": "#/components/schemas/AgentLinkLogic"
                    },
                    {
                      "$ref": "#/components/schemas/waitLogic"
                    },
                    {
                      "$ref": "#/components/schemas/jumpLogic"
                    },
                    {
                      "$ref": "#/components/schemas/conditionLogic"
                    },
                    {
                      "$ref": "#/components/schemas/abTestLogic"
                    },
                    {
                      "$ref": "#/components/schemas/webhookLogic"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "Code": "#/components/schemas/scriptLogic",
                      "Redirect": "#/components/schemas/redirectLogic",
                      "Set variable": "#/components/schemas/setVariableLogic",
                      "Agent link": "#/components/schemas/AgentLinkLogic",
                      "Wait": "#/components/schemas/waitLogic",
                      "Jump": "#/components/schemas/jumpLogic",
                      "Condition": "#/components/schemas/conditionLogic",
                      "AB test": "#/components/schemas/abTestLogic",
                      "webhook": "#/components/schemas/webhookLogic"
                    }
                  }
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/chatwootBlock"
                    },
                    {
                      "$ref": "#/components/schemas/googleAnalyticsBlock"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "outgoingEdgeId": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "OpenAI"
                          ]
                        },
                        "options": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "credentialsId": {
                                  "type": "string"
                                },
                                "baseUrl": {
                                  "type": "string"
                                },
                                "apiVersion": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "task": {
                                  "type": "string",
                                  "enum": [
                                    "Create chat completion"
                                  ]
                                },
                                "model": {
                                  "type": "string"
                                },
                                "messages": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "role": {
                                            "type": "string",
                                            "enum": [
                                              "system",
                                              "user",
                                              "assistant"
                                            ]
                                          },
                                          "content": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "role": {
                                            "type": "string",
                                            "enum": [
                                              "Messages sequence ✨"
                                            ]
                                          },
                                          "content": {
                                            "type": "object",
                                            "properties": {
                                              "assistantMessagesVariableId": {
                                                "type": "string"
                                              },
                                              "userMessagesVariableId": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "role"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "role": {
                                            "type": "string",
                                            "enum": [
                                              "Dialogue"
                                            ]
                                          },
                                          "dialogueVariableId": {
                                            "type": "string"
                                          },
                                          "startsBy": {
                                            "type": "string",
                                            "enum": [
                                              "user",
                                              "assistant"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "role"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "advancedSettings": {
                                  "type": "object",
                                  "properties": {
                                    "temperature": {
                                      "anyOf": [
                                        {
                                          "type": "number"
                                        },
                                        {}
                                      ]
                                    }
                                  }
                                },
                                "responseMapping": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "valueToExtract": {
                                        "type": "string",
                                        "enum": [
                                          "Message content",
                                          "Total tokens"
                                        ]
                                      },
                                      "variableId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "valueToExtract"
                                    ]
                                  }
                                },
                                "credentialsId": {
                                  "type": "string"
                                },
                                "baseUrl": {
                                  "type": "string"
                                },
                                "apiVersion": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "task"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "task": {
                                  "type": "string",
                                  "enum": [
                                    "Create image"
                                  ]
                                },
                                "prompt": {
                                  "type": "string"
                                },
                                "advancedOptions": {
                                  "type": "object",
                                  "properties": {
                                    "size": {
                                      "type": "string",
                                      "enum": [
                                        "256x256",
                                        "512x512",
                                        "1024x1024"
                                      ]
                                    }
                                  }
                                },
                                "responseMapping": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "valueToExtract": {
                                        "type": "string",
                                        "enum": [
                                          "Image URL"
                                        ]
                                      },
                                      "variableId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "valueToExtract"
                                    ]
                                  }
                                },
                                "credentialsId": {
                                  "type": "string"
                                },
                                "baseUrl": {
                                  "type": "string"
                                },
                                "apiVersion": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "task",
                                "advancedOptions",
                                "responseMapping"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "credentialsId": {
                                  "type": "string"
                                },
                                "baseUrl": {
                                  "type": "string"
                                },
                                "apiVersion": {
                                  "type": "string"
                                },
                                "task": {
                                  "type": "string",
                                  "enum": [
                                    "Create speech"
                                  ]
                                },
                                "model": {
                                  "type": "string"
                                },
                                "input": {
                                  "type": "string"
                                },
                                "voice": {
                                  "type": "string",
                                  "enum": [
                                    "alloy",
                                    "echo",
                                    "fable",
                                    "onyx",
                                    "nova",
                                    "shimmer"
                                  ]
                                },
                                "saveUrlInVariableId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "task"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    {
                      "$ref": "#/components/schemas/sendEmailBlock"
                    },
                    {
                      "$ref": "#/components/schemas/pixelBlock"
                    },
                    {
                      "$ref": "#/components/schemas/googleSheetsBlock"
                    },
                    {
                      "$ref": "#/components/schemas/makeComBlock"
                    },
                    {
                      "$ref": "#/components/schemas/pabblyConnectBlock"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "outgoingEdgeId": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Webhook"
                          ],
                          "description": "Legacy name for HTTP Request block"
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "variablesForTest": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "variableId": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            },
                            "responseVariableMapping": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "variableId": {
                                    "type": "string"
                                  },
                                  "bodyPath": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            },
                            "isAdvancedConfig": {
                              "type": "boolean"
                            },
                            "isCustomBody": {
                              "type": "boolean"
                            },
                            "isExecutedOnClient": {
                              "type": "boolean"
                            },
                            "webhook": {
                              "$ref": "#/components/schemas/httpRequestBlock"
                            },
                            "timeout": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 120
                            }
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    {
                      "$ref": "#/components/schemas/zapierBlock"
                    }
                  ]
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/openaiBlock"
                    },
                    {
                      "$ref": "#/components/schemas/cal-comBlock"
                    },
                    {
                      "$ref": "#/components/schemas/chat-nodeBlock"
                    },
                    {
                      "$ref": "#/components/schemas/qr-codeBlock"
                    },
                    {
                      "$ref": "#/components/schemas/dify-aiBlock"
                    },
                    {
                      "$ref": "#/components/schemas/mistralBlock"
                    },
                    {
                      "$ref": "#/components/schemas/elevenlabsBlock"
                    },
                    {
                      "$ref": "#/components/schemas/anthropicBlock"
                    },
                    {
                      "$ref": "#/components/schemas/together-aiBlock"
                    },
                    {
                      "$ref": "#/components/schemas/open-routerBlock"
                    },
                    {
                      "$ref": "#/components/schemas/nocodbBlock"
                    },
                    {
                      "$ref": "#/components/schemas/segmentBlock"
                    },
                    {
                      "$ref": "#/components/schemas/groqBlock"
                    },
                    {
                      "$ref": "#/components/schemas/zendeskBlock"
                    },
                    {
                      "$ref": "#/components/schemas/user-infoBlock"
                    },
                    {
                      "$ref": "#/components/schemas/supabaseBlock"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "openai": "#/components/schemas/openaiBlock",
                      "cal-com": "#/components/schemas/cal-comBlock",
                      "chat-node": "#/components/schemas/chat-nodeBlock",
                      "qr-code": "#/components/schemas/qr-codeBlock",
                      "dify-ai": "#/components/schemas/dify-aiBlock",
                      "mistral": "#/components/schemas/mistralBlock",
                      "elevenlabs": "#/components/schemas/elevenlabsBlock",
                      "anthropic": "#/components/schemas/anthropicBlock",
                      "together-ai": "#/components/schemas/together-aiBlock",
                      "open-router": "#/components/schemas/open-routerBlock",
                      "nocodb": "#/components/schemas/nocodbBlock",
                      "segment": "#/components/schemas/segmentBlock",
                      "groq": "#/components/schemas/groqBlock",
                      "zendesk": "#/components/schemas/zendeskBlock",
                      "user-info": "#/components/schemas/user-infoBlock",
                      "supabase": "#/components/schemas/supabaseBlock"
                    }
                  }
                }
              ]
            }
          }
        },
        "required": [
          "id",
          "title",
          "graphCoordinates",
          "blocks"
        ],
        "title": "Group V6"
      },
      "buttonsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "choice input"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "outgoingEdgeId": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "displayCondition": {
                  "type": "object",
                  "properties": {
                    "isEnabled": {
                      "type": "boolean"
                    },
                    "condition": {
                      "type": "object",
                      "properties": {
                        "logicalOperator": {
                          "type": "string",
                          "enum": [
                            "OR",
                            "AND"
                          ]
                        },
                        "comparisons": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "variableId": {
                                "type": "string"
                              },
                              "comparisonOperator": {
                                "type": "string",
                                "enum": [
                                  "Equal to",
                                  "Not equal",
                                  "Contains",
                                  "Does not contain",
                                  "Greater than",
                                  "Greater or equal to",
                                  "Less than",
                                  "Less or equal to",
                                  "Is set",
                                  "Is empty",
                                  "Starts with",
                                  "Ends with",
                                  "Matches regex",
                                  "Does not match regex"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "isMultipleChoice": {
                "type": "boolean"
              },
              "buttonLabel": {
                "type": "string"
              },
              "dynamicVariableId": {
                "type": "string"
              },
              "isSearchable": {
                "type": "boolean"
              },
              "searchInputPlaceholder": {
                "type": "string"
              },
              "areInitialSearchButtonsVisible": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "items"
        ],
        "title": "Buttons"
      },
      "fileInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "file input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "isRequired": {
                "type": "boolean"
              },
              "isMultipleAllowed": {
                "type": "boolean"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  },
                  "clear": {
                    "type": "string"
                  },
                  "skip": {
                    "type": "string"
                  },
                  "success": {
                    "type": "object",
                    "properties": {
                      "single": {
                        "type": "string"
                      },
                      "multiple": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "Auto",
                  "Public",
                  "Private"
                ]
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "File"
      },
      "pictureChoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "image choice"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "outgoingEdgeId": {
                  "type": "string"
                },
                "pictureSrc": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "displayCondition": {
                  "type": "object",
                  "properties": {
                    "isEnabled": {
                      "type": "boolean"
                    },
                    "condition": {
                      "type": "object",
                      "properties": {
                        "logicalOperator": {
                          "type": "string",
                          "enum": [
                            "OR",
                            "AND"
                          ]
                        },
                        "comparisons": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "variableId": {
                                "type": "string"
                              },
                              "comparisonOperator": {
                                "type": "string",
                                "enum": [
                                  "Equal to",
                                  "Not equal",
                                  "Contains",
                                  "Does not contain",
                                  "Greater than",
                                  "Greater or equal to",
                                  "Less than",
                                  "Less or equal to",
                                  "Is set",
                                  "Is empty",
                                  "Starts with",
                                  "Ends with",
                                  "Matches regex",
                                  "Does not match regex"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "variableId": {
                "type": "string"
              },
              "isMultipleChoice": {
                "type": "boolean"
              },
              "showTitle": {
                "type": "boolean"
              },
              "isSearchable": {
                "type": "boolean"
              },
              "buttonLabel": {
                "type": "string"
              },
              "searchInputPlaceholder": {
                "type": "string"
              },
              "dynamicItems": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "titlesVariableId": {
                    "type": "string"
                  },
                  "descriptionsVariableId": {
                    "type": "string"
                  },
                  "pictureSrcsVariableId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "items"
        ],
        "title": "Picture choice"
      },
      "conditionLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Condition"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "outgoingEdgeId": {
                  "type": "string"
                },
                "content": {
                  "type": "object",
                  "properties": {
                    "logicalOperator": {
                      "type": "string",
                      "enum": [
                        "OR",
                        "AND"
                      ]
                    },
                    "comparisons": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "variableId": {
                            "type": "string"
                          },
                          "comparisonOperator": {
                            "type": "string",
                            "enum": [
                              "Equal to",
                              "Not equal",
                              "Contains",
                              "Does not contain",
                              "Greater than",
                              "Greater or equal to",
                              "Less than",
                              "Less or equal to",
                              "Is set",
                              "Is empty",
                              "Starts with",
                              "Ends with",
                              "Matches regex",
                              "Does not match regex"
                            ]
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "required": [
          "id",
          "type",
          "items"
        ],
        "title": "Condition"
      },
      "abTestLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "AB test"
            ]
          },
          "items": {
            "type": "array",
            "maxItems": 2,
            "minItems": 2,
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "outgoingEdgeId": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string",
                      "enum": [
                        "a"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "path"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "outgoingEdgeId": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string",
                      "enum": [
                        "b"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "path"
                  ]
                }
              ]
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "aPercent": {
                "type": "number",
                "minimum": 0,
                "maximum": 100
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "items"
        ],
        "title": "AB Test"
      },
      "webhookLogic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "webhook"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "responseVariableMapping": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "variableId": {
                      "type": "string"
                    },
                    "bodyPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Webhook"
      },
      "googleSheetsBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Google Sheets"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "sheetId": {
                    "type": "string"
                  },
                  "spreadsheetId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Get data from sheet"
                    ]
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "comparisons": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "column": {
                              "type": "string"
                            },
                            "comparisonOperator": {
                              "type": "string",
                              "enum": [
                                "Equal to",
                                "Not equal",
                                "Contains",
                                "Does not contain",
                                "Greater than",
                                "Greater or equal to",
                                "Less than",
                                "Less or equal to",
                                "Is set",
                                "Is empty",
                                "Starts with",
                                "Ends with",
                                "Matches regex",
                                "Does not match regex"
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "logicalOperator": {
                        "type": "string",
                        "enum": [
                          "OR",
                          "AND"
                        ]
                      }
                    }
                  },
                  "cellsToExtract": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "variableId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "totalRowsToExtract": {
                    "type": "string",
                    "enum": [
                      "All",
                      "First",
                      "Last",
                      "Random"
                    ]
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "sheetId": {
                    "type": "string"
                  },
                  "spreadsheetId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Insert a row"
                    ]
                  },
                  "cellsToInsert": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "sheetId": {
                    "type": "string"
                  },
                  "spreadsheetId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Update a row"
                    ]
                  },
                  "cellsToUpsert": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "comparisons": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "column": {
                              "type": "string"
                            },
                            "comparisonOperator": {
                              "type": "string",
                              "enum": [
                                "Equal to",
                                "Not equal",
                                "Contains",
                                "Does not contain",
                                "Greater than",
                                "Greater or equal to",
                                "Less than",
                                "Less or equal to",
                                "Is set",
                                "Is empty",
                                "Starts with",
                                "Ends with",
                                "Matches regex",
                                "Does not match regex"
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "logicalOperator": {
                        "type": "string",
                        "enum": [
                          "OR",
                          "AND"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "sheetId": {
                    "type": "string"
                  },
                  "spreadsheetId": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Google Sheets"
      },
      "makeComBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Make.com"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variablesForTest": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "variableId": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "responseVariableMapping": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "variableId": {
                      "type": "string"
                    },
                    "bodyPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "isAdvancedConfig": {
                "type": "boolean"
              },
              "isCustomBody": {
                "type": "boolean"
              },
              "isExecutedOnClient": {
                "type": "boolean"
              },
              "webhook": {
                "$ref": "#/components/schemas/httpRequestBlock"
              },
              "timeout": {
                "type": "number",
                "minimum": 1,
                "maximum": 120
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Make.com"
      },
      "httpRequestBlock": {
        "type": "object",
        "properties": {
          "queryParams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "method": {
            "type": "string",
            "enum": [
              "POST",
              "GET",
              "PUT",
              "DELETE",
              "PATCH",
              "HEAD",
              "CONNECT",
              "OPTIONS",
              "TRACE"
            ]
          },
          "url": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        },
        "title": "HTTP Request"
      },
      "pabblyConnectBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Pabbly"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variablesForTest": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "variableId": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "responseVariableMapping": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "variableId": {
                      "type": "string"
                    },
                    "bodyPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "isAdvancedConfig": {
                "type": "boolean"
              },
              "isCustomBody": {
                "type": "boolean"
              },
              "isExecutedOnClient": {
                "type": "boolean"
              },
              "webhook": {
                "$ref": "#/components/schemas/httpRequestBlock"
              },
              "timeout": {
                "type": "number",
                "minimum": 1,
                "maximum": 120
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Pabbly Connect"
      },
      "zapierBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Zapier"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "variablesForTest": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "variableId": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "responseVariableMapping": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "variableId": {
                      "type": "string"
                    },
                    "bodyPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "isAdvancedConfig": {
                "type": "boolean"
              },
              "isCustomBody": {
                "type": "boolean"
              },
              "isExecutedOnClient": {
                "type": "boolean"
              },
              "webhook": {
                "$ref": "#/components/schemas/httpRequestBlock"
              },
              "timeout": {
                "type": "number",
                "minimum": 1,
                "maximum": 120
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Zapier"
      },
      "openaiBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "openai"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "baseUrl": {
                    "type": "string"
                  },
                  "apiVersion": {
                    "type": "string"
                  },
                  "credentialsId": {
                    "type": "string"
                  }
                },
                "description": "Deprecated, use other dedicated OpenAI compatible blocks instead"
              },
              {
                "type": "object",
                "properties": {
                  "baseUrl": {
                    "type": "string"
                  },
                  "apiVersion": {
                    "type": "string"
                  },
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create chat completion"
                    ]
                  },
                  "model": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "system"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "user"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "Dialogue"
                              ]
                            },
                            "dialogueVariableId": {
                              "type": "string"
                            },
                            "startsBy": {
                              "type": "string",
                              "enum": [
                                "user",
                                "assistant"
                              ]
                            }
                          },
                          "required": [
                            "role"
                          ]
                        }
                      ]
                    }
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "function"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "string"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "number"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "boolean"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "enum"
                                        ]
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  }
                                ]
                              }
                            },
                            "code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  },
                  "temperature": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {}
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Message content",
                            "Total tokens"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "baseUrl": {
                    "type": "string"
                  },
                  "apiVersion": {
                    "type": "string"
                  },
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Ask Assistant"
                    ]
                  },
                  "assistantId": {
                    "type": "string"
                  },
                  "threadVariableId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "functions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Message",
                            "Thread ID"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "threadId": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "baseUrl": {
                    "type": "string"
                  },
                  "apiVersion": {
                    "type": "string"
                  },
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Generate variables"
                    ]
                  },
                  "model": {
                    "type": "string"
                  },
                  "prompt": {
                    "type": "string"
                  },
                  "variablesToExtract": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "string"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "number"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "boolean"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "enum"
                              ]
                            },
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "baseUrl": {
                    "type": "string"
                  },
                  "apiVersion": {
                    "type": "string"
                  },
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create speech"
                    ]
                  },
                  "model": {
                    "type": "string"
                  },
                  "input": {
                    "type": "string"
                  },
                  "voice": {
                    "type": "string",
                    "enum": [
                      "alloy",
                      "echo",
                      "fable",
                      "onyx",
                      "nova",
                      "shimmer"
                    ]
                  },
                  "saveUrlInVariableId": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "baseUrl": {
                    "type": "string"
                  },
                  "apiVersion": {
                    "type": "string"
                  },
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create transcription"
                    ]
                  },
                  "url": {
                    "type": "string"
                  },
                  "transcriptionVariableId": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "OpenAI"
      },
      "cal-comBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "cal-com"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "baseUrl": {
                    "type": "string"
                  },
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "baseUrl": {
                    "type": "string"
                  },
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Book event"
                    ]
                  },
                  "link": {
                    "type": "string"
                  },
                  "layout": {
                    "type": "string",
                    "enum": [
                      "Month",
                      "Weekly",
                      "Columns"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "additionalNotes": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "saveBookedDateInVariableId": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Cal.com"
      },
      "chat-nodeBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "chat-node"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Send Message"
                    ]
                  },
                  "botId": {
                    "type": "string"
                  },
                  "threadId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Message",
                            "Thread ID"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "ChatNode"
      },
      "qr-codeBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "qr-code"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Generate a QR Code"
                    ]
                  },
                  "data": {
                    "type": "string"
                  },
                  "saveUrlInVariableId": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "QR code"
      },
      "dify-aiBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "dify-ai"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create Chat Message"
                    ]
                  },
                  "query": {
                    "type": "string"
                  },
                  "conversationVariableId": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Answer",
                            "Conversation ID",
                            "Total Tokens"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "conversation_id": {
                    "type": "string",
                    "description": "Deprecated, use `conversationVariableId` instead"
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Dify.AI"
      },
      "mistralBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "mistral"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create chat completion"
                    ]
                  },
                  "model": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "system"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "user"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "Dialogue"
                              ]
                            },
                            "dialogueVariableId": {
                              "type": "string"
                            },
                            "startsBy": {
                              "type": "string",
                              "enum": [
                                "user",
                                "assistant"
                              ]
                            }
                          },
                          "required": [
                            "role"
                          ]
                        }
                      ]
                    }
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "function"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "string"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "number"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "boolean"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "enum"
                                        ]
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  }
                                ]
                              }
                            },
                            "code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Message content"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Generate variables"
                    ]
                  },
                  "model": {
                    "type": "string"
                  },
                  "prompt": {
                    "type": "string"
                  },
                  "variablesToExtract": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "string"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "number"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "boolean"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "enum"
                              ]
                            },
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Mistral"
      },
      "elevenlabsBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "elevenlabs"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Convert text to speech"
                    ]
                  },
                  "text": {
                    "type": "string"
                  },
                  "voiceId": {
                    "type": "string"
                  },
                  "modelId": {
                    "type": "string"
                  },
                  "saveUrlInVariableId": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "ElevenLabs"
      },
      "anthropicBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "anthropic"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create Chat Message"
                    ]
                  },
                  "model": {
                    "type": "string",
                    "enum": [
                      "claude-3-5-haiku-latest",
                      "claude-3-5-sonnet-latest",
                      "claude-3-5-sonnet-20240620",
                      "claude-3-opus-20240229",
                      "claude-3-sonnet-20240229",
                      "claude-3-haiku-20240307",
                      "claude-2.1",
                      "claude-2.0",
                      "claude-instant-1.2"
                    ]
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "user"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "Dialogue"
                              ]
                            },
                            "dialogueVariableId": {
                              "type": "string"
                            },
                            "startsBy": {
                              "type": "string",
                              "enum": [
                                "user",
                                "assistant"
                              ]
                            }
                          },
                          "required": [
                            "role"
                          ]
                        }
                      ]
                    }
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "function"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "string"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "number"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "boolean"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "enum"
                                        ]
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  }
                                ]
                              }
                            },
                            "code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  },
                  "systemMessage": {
                    "type": "string"
                  },
                  "temperature": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {}
                    ]
                  },
                  "maxTokens": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {}
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Message Content"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Generate variables"
                    ]
                  },
                  "model": {
                    "type": "string",
                    "enum": [
                      "claude-3-5-haiku-latest",
                      "claude-3-5-sonnet-latest",
                      "claude-3-5-sonnet-20240620",
                      "claude-3-opus-20240229",
                      "claude-3-sonnet-20240229",
                      "claude-3-haiku-20240307",
                      "claude-2.1",
                      "claude-2.0",
                      "claude-instant-1.2"
                    ]
                  },
                  "prompt": {
                    "type": "string"
                  },
                  "variablesToExtract": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "string"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "number"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "boolean"
                              ]
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "enum"
                              ]
                            },
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "variableId": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Anthropic"
      },
      "together-aiBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "together-ai"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create chat completion"
                    ]
                  },
                  "model": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "system"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "user"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "Dialogue"
                              ]
                            },
                            "dialogueVariableId": {
                              "type": "string"
                            },
                            "startsBy": {
                              "type": "string",
                              "enum": [
                                "user",
                                "assistant"
                              ]
                            }
                          },
                          "required": [
                            "role"
                          ]
                        }
                      ]
                    }
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "function"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "string"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "number"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "boolean"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "enum"
                                        ]
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  }
                                ]
                              }
                            },
                            "code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  },
                  "temperature": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {}
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Message content",
                            "Total tokens"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Together"
      },
      "open-routerBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "open-router"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create chat completion"
                    ]
                  },
                  "model": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "system"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "user"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "Dialogue"
                              ]
                            },
                            "dialogueVariableId": {
                              "type": "string"
                            },
                            "startsBy": {
                              "type": "string",
                              "enum": [
                                "user",
                                "assistant"
                              ]
                            }
                          },
                          "required": [
                            "role"
                          ]
                        }
                      ]
                    }
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "function"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "string"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "number"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "boolean"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "enum"
                                        ]
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  }
                                ]
                              }
                            },
                            "code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  },
                  "temperature": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {}
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Message content",
                            "Total tokens"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "OpenRouter"
      },
      "nocodbBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "nocodb"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Search Records"
                    ]
                  },
                  "tableId": {
                    "type": "string"
                  },
                  "viewId": {
                    "type": "string"
                  },
                  "returnType": {
                    "type": "string",
                    "enum": [
                      "All",
                      "First",
                      "Last",
                      "Random"
                    ]
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "comparisons": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "string"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "Equal to",
                                "Not equal",
                                "Contains",
                                "Greater than",
                                "Less than",
                                "Is set",
                                "Is empty",
                                "Starts with",
                                "Ends with"
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "joiner": {
                        "type": "string",
                        "enum": [
                          "AND",
                          "OR"
                        ]
                      }
                    },
                    "required": [
                      "comparisons"
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldName": {
                          "type": "string"
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create Record"
                    ]
                  },
                  "tableId": {
                    "type": "string"
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Update Existing Record"
                    ]
                  },
                  "tableId": {
                    "type": "string"
                  },
                  "viewId": {
                    "type": "string"
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "comparisons": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "string"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "Equal to",
                                "Not equal",
                                "Contains",
                                "Greater than",
                                "Less than",
                                "Is set",
                                "Is empty",
                                "Starts with",
                                "Ends with"
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "joiner": {
                        "type": "string",
                        "enum": [
                          "AND",
                          "OR"
                        ]
                      }
                    },
                    "required": [
                      "comparisons"
                    ]
                  },
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldName": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "NocoDB"
      },
      "segmentBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "segment"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Alias"
                    ]
                  },
                  "userId": {
                    "type": "string"
                  },
                  "previousId": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Identify User"
                    ]
                  },
                  "userId": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "traits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Page"
                    ]
                  },
                  "userId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Track"
                    ]
                  },
                  "eventName": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Segment"
      },
      "groqBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "groq"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create chat completion"
                    ]
                  },
                  "model": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "system"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "user"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "Dialogue"
                              ]
                            },
                            "dialogueVariableId": {
                              "type": "string"
                            },
                            "startsBy": {
                              "type": "string",
                              "enum": [
                                "user",
                                "assistant"
                              ]
                            }
                          },
                          "required": [
                            "role"
                          ]
                        }
                      ]
                    }
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "function"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "string"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "number"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "boolean"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "enum"
                                        ]
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  }
                                ]
                              }
                            },
                            "code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  },
                  "temperature": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {}
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Message content",
                            "Total tokens"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Groq"
      },
      "zendeskBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "zendesk"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Open Web Widget"
                    ]
                  },
                  "userId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "webWidgetKey": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Zendesk"
      },
      "user-infoBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "user-info"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Get Network Info"
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "IP",
                            "IP (Raw)",
                            "Referer",
                            "Referer (Raw)",
                            "User Agent",
                            "User Agent (Raw)",
                            "Host"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Get Location Info"
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Country",
                            "Country (Raw)",
                            "City",
                            "City (Raw)",
                            "Continent",
                            "Continent (Raw)",
                            "Region",
                            "Region (Raw)",
                            "Latitude",
                            "Latitude (Raw)",
                            "Longitude",
                            "Longitude (Raw)",
                            "Is EU Country"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Get Device Info"
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Device Type",
                            "Device Vendor",
                            "Device Model"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Get Browser Info"
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Browser Name",
                            "Browser Version",
                            "Browser Language",
                            "Browser Language Code",
                            "Browser Language Region",
                            "OS Name",
                            "OS Version"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "User Info"
      },
      "supabaseBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "supabase"
            ]
          },
          "options": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Create Row"
                    ]
                  },
                  "table": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Row Created",
                            "Table Name"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Get Rows"
                    ]
                  },
                  "table": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  },
                  "returnType": {
                    "type": "string",
                    "enum": [
                      "All",
                      "First",
                      "Last",
                      "Random"
                    ]
                  },
                  "orderBy": {
                    "type": "string"
                  },
                  "orderDirection": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "comparisons": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "string"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "Equal to",
                                "Not equal",
                                "Contains",
                                "Greater than",
                                "Greater than or equal",
                                "Less than",
                                "Less than or equal",
                                "Is set",
                                "Is empty",
                                "Starts with",
                                "Ends with",
                                "In",
                                "Not in"
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "joiner": {
                        "type": "string",
                        "enum": [
                          "AND",
                          "OR"
                        ]
                      }
                    },
                    "required": [
                      "comparisons"
                    ]
                  },
                  "select": {
                    "type": "string"
                  },
                  "limit": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {}
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Rows Found",
                            "Table Name",
                            "Rows Count"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Update Rows"
                    ]
                  },
                  "table": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "comparisons": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "string"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "Equal to",
                                "Not equal",
                                "Contains",
                                "Greater than",
                                "Greater than or equal",
                                "Less than",
                                "Less than or equal",
                                "Is set",
                                "Is empty",
                                "Starts with",
                                "Ends with",
                                "In",
                                "Not in"
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "joiner": {
                        "type": "string",
                        "enum": [
                          "AND",
                          "OR"
                        ]
                      }
                    },
                    "required": [
                      "comparisons"
                    ]
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Updated Rows",
                            "Table Name",
                            "Updated Count"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "Delete Rows"
                    ]
                  },
                  "table": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "comparisons": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "type": "string"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "Equal to",
                                "Not equal",
                                "Contains",
                                "Greater than",
                                "Greater than or equal",
                                "Less than",
                                "Less than or equal",
                                "Is set",
                                "Is empty",
                                "Starts with",
                                "Ends with",
                                "In",
                                "Not in"
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "joiner": {
                        "type": "string",
                        "enum": [
                          "AND",
                          "OR"
                        ]
                      }
                    },
                    "required": [
                      "comparisons"
                    ]
                  },
                  "responseMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "enum": [
                            "Deleted Rows",
                            "Table Name",
                            "Deleted Count"
                          ]
                        },
                        "variableId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "action"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Supabase"
      },
      "error.BAD_REQUEST": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Invalid input data"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "BAD_REQUEST"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "BAD_REQUEST",
          "message": "Invalid input data",
          "issues": []
        }
      },
      "error.UNAUTHORIZED": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Authorization not provided"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "UNAUTHORIZED"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "UNAUTHORIZED",
          "message": "Authorization not provided",
          "issues": []
        }
      },
      "error.FORBIDDEN": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Insufficient access"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "FORBIDDEN"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "FORBIDDEN",
          "message": "Insufficient access",
          "issues": []
        }
      },
      "error.NOT_FOUND": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Not found"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "NOT_FOUND"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "NOT_FOUND",
          "message": "Not found",
          "issues": []
        }
      },
      "error.INTERNAL_SERVER_ERROR": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Internal server error"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "INTERNAL_SERVER_ERROR"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "INTERNAL_SERVER_ERROR",
          "message": "Internal server error",
          "issues": []
        }
      },
      "event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "graphCoordinates": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            },
            "required": [
              "x",
              "y"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "start"
            ]
          }
        },
        "required": [
          "id",
          "graphCoordinates",
          "type"
        ],
        "description": "Event"
      },
      "theme": {
        "type": "object",
        "properties": {
          "general": {
            "type": "object",
            "properties": {
              "font": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Google"
                            ]
                          },
                          "family": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Custom"
                            ]
                          },
                          "family": {
                            "type": "string"
                          },
                          "css": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "description": "Deprecated, use `css` instead"
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    ]
                  }
                ]
              },
              "background": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Color",
                      "Image",
                      "None"
                    ]
                  },
                  "content": {
                    "type": "string"
                  }
                }
              },
              "progressBar": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "color": {
                    "type": "string"
                  },
                  "backgroundColor": {
                    "type": "string"
                  },
                  "placement": {
                    "type": "string",
                    "enum": [
                      "Top",
                      "Bottom"
                    ]
                  },
                  "thickness": {
                    "type": "number"
                  },
                  "position": {
                    "type": "string",
                    "enum": [
                      "fixed",
                      "absolute"
                    ]
                  }
                }
              }
            }
          },
          "chat": {
            "type": "object",
            "properties": {
              "container": {
                "type": "object",
                "properties": {
                  "maxWidth": {
                    "type": "string"
                  },
                  "maxHeight": {
                    "type": "string"
                  },
                  "backgroundColor": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "blur": {
                    "type": "number"
                  },
                  "opacity": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "shadow": {
                    "type": "string",
                    "enum": [
                      "none",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                      "2xl"
                    ]
                  },
                  "border": {
                    "type": "object",
                    "properties": {
                      "thickness": {
                        "type": "number"
                      },
                      "color": {
                        "type": "string"
                      },
                      "roundeness": {
                        "type": "string",
                        "enum": [
                          "none",
                          "medium",
                          "large",
                          "custom"
                        ]
                      },
                      "customRoundeness": {
                        "type": "number"
                      },
                      "opacity": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  }
                }
              },
              "hostAvatar": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              "guestAvatar": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              "hostBubbles": {
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "blur": {
                    "type": "number"
                  },
                  "opacity": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "shadow": {
                    "type": "string",
                    "enum": [
                      "none",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                      "2xl"
                    ]
                  },
                  "border": {
                    "type": "object",
                    "properties": {
                      "thickness": {
                        "type": "number"
                      },
                      "color": {
                        "type": "string"
                      },
                      "roundeness": {
                        "type": "string",
                        "enum": [
                          "none",
                          "medium",
                          "large",
                          "custom"
                        ]
                      },
                      "customRoundeness": {
                        "type": "number"
                      },
                      "opacity": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  }
                }
              },
              "guestBubbles": {
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "blur": {
                    "type": "number"
                  },
                  "opacity": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "shadow": {
                    "type": "string",
                    "enum": [
                      "none",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                      "2xl"
                    ]
                  },
                  "border": {
                    "type": "object",
                    "properties": {
                      "thickness": {
                        "type": "number"
                      },
                      "color": {
                        "type": "string"
                      },
                      "roundeness": {
                        "type": "string",
                        "enum": [
                          "none",
                          "medium",
                          "large",
                          "custom"
                        ]
                      },
                      "customRoundeness": {
                        "type": "number"
                      },
                      "opacity": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  }
                }
              },
              "buttons": {
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "blur": {
                    "type": "number"
                  },
                  "opacity": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "shadow": {
                    "type": "string",
                    "enum": [
                      "none",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                      "2xl"
                    ]
                  },
                  "border": {
                    "type": "object",
                    "properties": {
                      "thickness": {
                        "type": "number"
                      },
                      "color": {
                        "type": "string"
                      },
                      "roundeness": {
                        "type": "string",
                        "enum": [
                          "none",
                          "medium",
                          "large",
                          "custom"
                        ]
                      },
                      "customRoundeness": {
                        "type": "number"
                      },
                      "opacity": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  }
                }
              },
              "inputs": {
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "blur": {
                    "type": "number"
                  },
                  "opacity": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "shadow": {
                    "type": "string",
                    "enum": [
                      "none",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                      "2xl"
                    ]
                  },
                  "border": {
                    "type": "object",
                    "properties": {
                      "thickness": {
                        "type": "number"
                      },
                      "color": {
                        "type": "string"
                      },
                      "roundeness": {
                        "type": "string",
                        "enum": [
                          "none",
                          "medium",
                          "large",
                          "custom"
                        ]
                      },
                      "customRoundeness": {
                        "type": "number"
                      },
                      "opacity": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  },
                  "placeholderColor": {
                    "type": "string"
                  }
                }
              },
              "roundness": {
                "type": "string",
                "enum": [
                  "none",
                  "medium",
                  "large"
                ],
                "description": "Deprecated, use `container.border.roundeness` instead"
              },
              "buttonsInput": {
                "type": "object",
                "properties": {
                  "layout": {
                    "type": "string",
                    "enum": [
                      "wrap",
                      "vertical"
                    ]
                  }
                }
              }
            }
          },
          "customCss": {
            "type": "string"
          }
        },
        "title": "Theme"
      },
      "settings": {
        "type": "object",
        "properties": {
          "general": {
            "type": "object",
            "properties": {
              "isBrandingEnabled": {
                "type": "boolean"
              },
              "brandingText": {
                "type": "string"
              },
              "brandingUrl": {
                "type": "string"
              },
              "isTypingEmulationEnabled": {
                "type": "boolean"
              },
              "isInputPrefillEnabled": {
                "type": "boolean"
              },
              "isHideQueryParamsEnabled": {
                "type": "boolean"
              },
              "isNewResultOnRefreshEnabled": {
                "type": "boolean"
              },
              "rememberUser": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "storage": {
                    "type": "string",
                    "enum": [
                      "session",
                      "local"
                    ]
                  }
                }
              },
              "expiration": {
                "type": "object",
                "properties": {
                  "expiresAt": {
                    "type": "string"
                  },
                  "expiredUrl": {
                    "type": "string"
                  },
                  "expiredTitle": {
                    "type": "string"
                  },
                  "expiredMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "typingEmulation": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "speed": {
                "type": "number"
              },
              "maxDelay": {
                "type": "number"
              },
              "delayBetweenBubbles": {
                "type": "number",
                "minimum": 0,
                "maximum": 5
              },
              "isDisabledOnFirstMessage": {
                "type": "boolean"
              }
            }
          },
          "metadata": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "favIconUrl": {
                "type": "string"
              },
              "customHeadCode": {
                "type": "string"
              },
              "googleTagManagerId": {
                "type": "string"
              }
            }
          },
          "whatsApp": {
            "type": "object",
            "properties": {
              "isEnabled": {
                "type": "boolean"
              },
              "startCondition": {
                "type": "object",
                "properties": {
                  "logicalOperator": {
                    "type": "string",
                    "enum": [
                      "OR",
                      "AND"
                    ]
                  },
                  "comparisons": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "comparisonOperator": {
                          "type": "string",
                          "enum": [
                            "Equal to",
                            "Not equal",
                            "Contains",
                            "Does not contain",
                            "Greater than",
                            "Greater or equal to",
                            "Less than",
                            "Less or equal to",
                            "Is set",
                            "Is empty",
                            "Starts with",
                            "Ends with",
                            "Matches regex",
                            "Does not match regex"
                          ]
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                },
                "required": [
                  "logicalOperator",
                  "comparisons"
                ]
              },
              "sessionExpiryTimeout": {
                "type": "number",
                "minimum": 0.01,
                "maximum": 48,
                "description": "Expiration delay in hours after latest interaction"
              }
            }
          },
          "publicShare": {
            "type": "object",
            "properties": {
              "isEnabled": {
                "type": "boolean"
              }
            }
          },
          "security": {
            "type": "object",
            "properties": {
              "allowedOrigins": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "password": {
                "type": "string"
              }
            }
          }
        },
        "title": "Settings"
      },
      "agentV6": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "enum": [
              "6"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "maxItems": 1,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/event"
                }
              ]
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/groupV6"
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "from": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "blockId": {
                          "type": "string"
                        },
                        "itemId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "blockId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "eventId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "eventId"
                      ]
                    }
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string"
                    },
                    "blockId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "groupId"
                  ]
                }
              },
              "required": [
                "id",
                "from",
                "to"
              ]
            }
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "isSessionVariable": {
                  "type": "boolean"
                },
                "value": {
                  "nullable": true,
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  ]
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          },
          "theme": {
            "$ref": "#/components/schemas/theme"
          },
          "selectedThemeTemplateId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "publicId": {
            "type": "string",
            "nullable": true
          },
          "customDomain": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "string"
          },
          "resultsTablePreferences": {
            "type": "object",
            "nullable": true,
            "properties": {
              "columnsOrder": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "columnsVisibility": {
                "type": "object",
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "columnsWidth": {
                "type": "object",
                "additionalProperties": {
                  "type": "number"
                }
              }
            },
            "required": [
              "columnsOrder",
              "columnsVisibility",
              "columnsWidth"
            ]
          },
          "isArchived": {
            "type": "boolean"
          },
          "isClosed": {
            "type": "boolean"
          },
          "domainId": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "whatsAppCredentialsId": {
            "type": "string",
            "nullable": true
          },
          "riskLevel": {
            "type": "number",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sharing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sharing"
              }
            ],
            "nullable": true
          },
          "shareId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "version",
          "id",
          "name",
          "events",
          "groups",
          "edges",
          "variables",
          "theme",
          "selectedThemeTemplateId",
          "settings",
          "createdAt",
          "updatedAt",
          "publishedAt",
          "isPublished",
          "icon",
          "description",
          "publicId",
          "customDomain",
          "workspaceId",
          "resultsTablePreferences",
          "isArchived",
          "isClosed",
          "domainId",
          "url",
          "whatsAppCredentialsId",
          "riskLevel",
          "sharing",
          "shareId"
        ],
        "title": "Agent V6"
      },
      "agentV5": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "enum": [
              "3",
              "4",
              "5"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "events": {
            "type": "array"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "graphCoordinates": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "x",
                    "y"
                  ]
                },
                "blocks": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "outgoingEdgeId": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "start"
                            ]
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "label"
                        ]
                      },
                      {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/textBlock"
                          },
                          {
                            "$ref": "#/components/schemas/imageBlock"
                          },
                          {
                            "$ref": "#/components/schemas/videoBlock"
                          },
                          {
                            "$ref": "#/components/schemas/embedBlock"
                          },
                          {
                            "$ref": "#/components/schemas/audioBlock"
                          }
                        ],
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "text": "#/components/schemas/textBlock",
                            "image": "#/components/schemas/imageBlock",
                            "video": "#/components/schemas/videoBlock",
                            "embed": "#/components/schemas/embedBlock",
                            "audio": "#/components/schemas/audioBlock"
                          }
                        }
                      },
                      {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/textInput"
                          },
                          {
                            "$ref": "#/components/schemas/email"
                          },
                          {
                            "$ref": "#/components/schemas/address"
                          },
                          {
                            "$ref": "#/components/schemas/autocomplete"
                          },
                          {
                            "$ref": "#/components/schemas/numberInput"
                          },
                          {
                            "$ref": "#/components/schemas/url"
                          },
                          {
                            "$ref": "#/components/schemas/phoneNumberInput"
                          },
                          {
                            "$ref": "#/components/schemas/dateInput"
                          },
                          {
                            "$ref": "#/components/schemas/paymentInput"
                          },
                          {
                            "$ref": "#/components/schemas/rating"
                          },
                          {
                            "$ref": "#/components/schemas/buttonsInputV5"
                          },
                          {
                            "$ref": "#/components/schemas/fileInputV5"
                          },
                          {
                            "$ref": "#/components/schemas/pictureChoiceV5"
                          }
                        ],
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "text input": "#/components/schemas/textInput",
                            "email input": "#/components/schemas/email",
                            "address input": "#/components/schemas/address",
                            "autocomplete input": "#/components/schemas/autocomplete",
                            "number input": "#/components/schemas/numberInput",
                            "url input": "#/components/schemas/url",
                            "phone number input": "#/components/schemas/phoneNumberInput",
                            "date input": "#/components/schemas/dateInput",
                            "payment input": "#/components/schemas/paymentInput",
                            "rating input": "#/components/schemas/rating",
                            "choice input": "#/components/schemas/buttonsInputV5",
                            "file input": "#/components/schemas/fileInputV5",
                            "image choice": "#/components/schemas/pictureChoiceV5"
                          }
                        }
                      },
                      {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/scriptLogic"
                          },
                          {
                            "$ref": "#/components/schemas/redirectLogic"
                          },
                          {
                            "$ref": "#/components/schemas/setVariableLogic"
                          },
                          {
                            "$ref": "#/components/schemas/AgentLinkLogic"
                          },
                          {
                            "$ref": "#/components/schemas/waitLogic"
                          },
                          {
                            "$ref": "#/components/schemas/jumpLogic"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Condition"
                                ]
                              },
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "blockId": {
                                      "type": "string"
                                    },
                                    "outgoingEdgeId": {
                                      "type": "string"
                                    },
                                    "content": {
                                      "type": "object",
                                      "properties": {
                                        "logicalOperator": {
                                          "type": "string",
                                          "enum": [
                                            "OR",
                                            "AND"
                                          ]
                                        },
                                        "comparisons": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "variableId": {
                                                "type": "string"
                                              },
                                              "comparisonOperator": {
                                                "type": "string",
                                                "enum": [
                                                  "Equal to",
                                                  "Not equal",
                                                  "Contains",
                                                  "Does not contain",
                                                  "Greater than",
                                                  "Greater or equal to",
                                                  "Less than",
                                                  "Less or equal to",
                                                  "Is set",
                                                  "Is empty",
                                                  "Starts with",
                                                  "Ends with",
                                                  "Matches regex",
                                                  "Does not match regex"
                                                ]
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "items"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "AB test"
                                ]
                              },
                              "items": {
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2,
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "blockId": {
                                          "type": "string"
                                        },
                                        "outgoingEdgeId": {
                                          "type": "string"
                                        },
                                        "path": {
                                          "type": "string",
                                          "enum": [
                                            "a"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "path"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "blockId": {
                                          "type": "string"
                                        },
                                        "outgoingEdgeId": {
                                          "type": "string"
                                        },
                                        "path": {
                                          "type": "string",
                                          "enum": [
                                            "b"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "path"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "aPercent": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "items"
                            ]
                          }
                        ]
                      },
                      {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/chatwootBlock"
                          },
                          {
                            "$ref": "#/components/schemas/googleAnalyticsBlock"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "OpenAI"
                                ]
                              },
                              "options": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "baseUrl": {
                                        "type": "string"
                                      },
                                      "apiVersion": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "task": {
                                        "type": "string",
                                        "enum": [
                                          "Create chat completion"
                                        ]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "messages": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string",
                                                  "enum": [
                                                    "system",
                                                    "user",
                                                    "assistant"
                                                  ]
                                                },
                                                "content": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Messages sequence ✨"
                                                  ]
                                                },
                                                "content": {
                                                  "type": "object",
                                                  "properties": {
                                                    "assistantMessagesVariableId": {
                                                      "type": "string"
                                                    },
                                                    "userMessagesVariableId": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "role"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Dialogue"
                                                  ]
                                                },
                                                "dialogueVariableId": {
                                                  "type": "string"
                                                },
                                                "startsBy": {
                                                  "type": "string",
                                                  "enum": [
                                                    "user",
                                                    "assistant"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "role"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "advancedSettings": {
                                        "type": "object",
                                        "properties": {
                                          "temperature": {
                                            "anyOf": [
                                              {
                                                "type": "number"
                                              },
                                              {}
                                            ]
                                          }
                                        }
                                      },
                                      "responseMapping": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "valueToExtract": {
                                              "type": "string",
                                              "enum": [
                                                "Message content",
                                                "Total tokens"
                                              ]
                                            },
                                            "variableId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "valueToExtract"
                                          ]
                                        }
                                      },
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "baseUrl": {
                                        "type": "string"
                                      },
                                      "apiVersion": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "task"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "task": {
                                        "type": "string",
                                        "enum": [
                                          "Create image"
                                        ]
                                      },
                                      "prompt": {
                                        "type": "string"
                                      },
                                      "advancedOptions": {
                                        "type": "object",
                                        "properties": {
                                          "size": {
                                            "type": "string",
                                            "enum": [
                                              "256x256",
                                              "512x512",
                                              "1024x1024"
                                            ]
                                          }
                                        }
                                      },
                                      "responseMapping": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "valueToExtract": {
                                              "type": "string",
                                              "enum": [
                                                "Image URL"
                                              ]
                                            },
                                            "variableId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "valueToExtract"
                                          ]
                                        }
                                      },
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "baseUrl": {
                                        "type": "string"
                                      },
                                      "apiVersion": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "task",
                                      "advancedOptions",
                                      "responseMapping"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "baseUrl": {
                                        "type": "string"
                                      },
                                      "apiVersion": {
                                        "type": "string"
                                      },
                                      "task": {
                                        "type": "string",
                                        "enum": [
                                          "Create speech"
                                        ]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "input": {
                                        "type": "string"
                                      },
                                      "voice": {
                                        "type": "string",
                                        "enum": [
                                          "alloy",
                                          "echo",
                                          "fable",
                                          "onyx",
                                          "nova",
                                          "shimmer"
                                        ]
                                      },
                                      "saveUrlInVariableId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "task"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "$ref": "#/components/schemas/sendEmailBlock"
                          },
                          {
                            "$ref": "#/components/schemas/pixelBlock"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Google Sheets"
                                ]
                              },
                              "options": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "sheetId": {
                                        "type": "string"
                                      },
                                      "spreadsheetId": {
                                        "type": "string"
                                      },
                                      "action": {
                                        "type": "string",
                                        "enum": [
                                          "Get data from sheet"
                                        ]
                                      },
                                      "referenceCell": {
                                        "type": "object",
                                        "properties": {
                                          "column": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      },
                                      "filter": {
                                        "type": "object",
                                        "properties": {
                                          "comparisons": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "column": {
                                                  "type": "string"
                                                },
                                                "comparisonOperator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equal to",
                                                    "Not equal",
                                                    "Contains",
                                                    "Does not contain",
                                                    "Greater than",
                                                    "Greater or equal to",
                                                    "Less than",
                                                    "Less or equal to",
                                                    "Is set",
                                                    "Is empty",
                                                    "Starts with",
                                                    "Ends with",
                                                    "Matches regex",
                                                    "Does not match regex"
                                                  ]
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            }
                                          },
                                          "logicalOperator": {
                                            "type": "string",
                                            "enum": [
                                              "OR",
                                              "AND"
                                            ]
                                          }
                                        }
                                      },
                                      "cellsToExtract": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            },
                                            "variableId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "totalRowsToExtract": {
                                        "type": "string",
                                        "enum": [
                                          "All",
                                          "First",
                                          "Last",
                                          "Random"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "action"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "sheetId": {
                                        "type": "string"
                                      },
                                      "spreadsheetId": {
                                        "type": "string"
                                      },
                                      "action": {
                                        "type": "string",
                                        "enum": [
                                          "Insert a row"
                                        ]
                                      },
                                      "cellsToInsert": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "action"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "sheetId": {
                                        "type": "string"
                                      },
                                      "spreadsheetId": {
                                        "type": "string"
                                      },
                                      "action": {
                                        "type": "string",
                                        "enum": [
                                          "Update a row"
                                        ]
                                      },
                                      "cellsToUpsert": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "referenceCell": {
                                        "type": "object",
                                        "properties": {
                                          "column": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      },
                                      "filter": {
                                        "type": "object",
                                        "properties": {
                                          "comparisons": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "column": {
                                                  "type": "string"
                                                },
                                                "comparisonOperator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equal to",
                                                    "Not equal",
                                                    "Contains",
                                                    "Does not contain",
                                                    "Greater than",
                                                    "Greater or equal to",
                                                    "Less than",
                                                    "Less or equal to",
                                                    "Is set",
                                                    "Is empty",
                                                    "Starts with",
                                                    "Ends with",
                                                    "Matches regex",
                                                    "Does not match regex"
                                                  ]
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            }
                                          },
                                          "logicalOperator": {
                                            "type": "string",
                                            "enum": [
                                              "OR",
                                              "AND"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "action"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "sheetId": {
                                        "type": "string"
                                      },
                                      "spreadsheetId": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Make.com"
                                ]
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "variablesForTest": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "responseVariableMapping": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "bodyPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "isAdvancedConfig": {
                                    "type": "boolean"
                                  },
                                  "isCustomBody": {
                                    "type": "boolean"
                                  },
                                  "isExecutedOnClient": {
                                    "type": "boolean"
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "queryParams": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "POST",
                                          "GET",
                                          "PUT",
                                          "DELETE",
                                          "PATCH",
                                          "HEAD",
                                          "CONNECT",
                                          "OPTIONS",
                                          "TRACE"
                                        ]
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "body": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 120
                                  }
                                }
                              },
                              "webhookId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Pabbly"
                                ]
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "variablesForTest": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "responseVariableMapping": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "bodyPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "isAdvancedConfig": {
                                    "type": "boolean"
                                  },
                                  "isCustomBody": {
                                    "type": "boolean"
                                  },
                                  "isExecutedOnClient": {
                                    "type": "boolean"
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "queryParams": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "POST",
                                          "GET",
                                          "PUT",
                                          "DELETE",
                                          "PATCH",
                                          "HEAD",
                                          "CONNECT",
                                          "OPTIONS",
                                          "TRACE"
                                        ]
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "body": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 120
                                  }
                                }
                              },
                              "webhookId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Webhook"
                                ],
                                "description": "Legacy name for HTTP Request block"
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "variablesForTest": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "responseVariableMapping": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "bodyPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "isAdvancedConfig": {
                                    "type": "boolean"
                                  },
                                  "isCustomBody": {
                                    "type": "boolean"
                                  },
                                  "isExecutedOnClient": {
                                    "type": "boolean"
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "queryParams": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "POST",
                                          "GET",
                                          "PUT",
                                          "DELETE",
                                          "PATCH",
                                          "HEAD",
                                          "CONNECT",
                                          "OPTIONS",
                                          "TRACE"
                                        ]
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "body": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 120
                                  }
                                }
                              },
                              "webhookId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Zapier"
                                ]
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "variablesForTest": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "responseVariableMapping": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "bodyPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "isAdvancedConfig": {
                                    "type": "boolean"
                                  },
                                  "isCustomBody": {
                                    "type": "boolean"
                                  },
                                  "isExecutedOnClient": {
                                    "type": "boolean"
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "queryParams": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "POST",
                                          "GET",
                                          "PUT",
                                          "DELETE",
                                          "PATCH",
                                          "HEAD",
                                          "CONNECT",
                                          "OPTIONS",
                                          "TRACE"
                                        ]
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "body": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 120
                                  }
                                }
                              },
                              "webhookId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "id",
                "title",
                "graphCoordinates",
                "blocks"
              ]
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "from": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "blockId": {
                          "type": "string"
                        },
                        "itemId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "blockId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "eventId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "eventId"
                      ]
                    }
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string"
                    },
                    "blockId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "groupId"
                  ]
                }
              },
              "required": [
                "id",
                "from",
                "to"
              ]
            }
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "isSessionVariable": {
                  "type": "boolean"
                },
                "value": {
                  "nullable": true,
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  ]
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          },
          "theme": {
            "$ref": "#/components/schemas/theme"
          },
          "selectedThemeTemplateId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "publicId": {
            "type": "string",
            "nullable": true
          },
          "customDomain": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "string"
          },
          "resultsTablePreferences": {
            "type": "object",
            "nullable": true,
            "properties": {
              "columnsOrder": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "columnsVisibility": {
                "type": "object",
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "columnsWidth": {
                "type": "object",
                "additionalProperties": {
                  "type": "number"
                }
              }
            },
            "required": [
              "columnsOrder",
              "columnsVisibility",
              "columnsWidth"
            ]
          },
          "isArchived": {
            "type": "boolean"
          },
          "isClosed": {
            "type": "boolean"
          },
          "domainId": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "whatsAppCredentialsId": {
            "type": "string",
            "nullable": true
          },
          "riskLevel": {
            "type": "number",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sharing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sharing"
              }
            ],
            "nullable": true
          },
          "shareId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "version",
          "id",
          "name",
          "events",
          "groups",
          "edges",
          "variables",
          "theme",
          "selectedThemeTemplateId",
          "settings",
          "createdAt",
          "updatedAt",
          "publishedAt",
          "isPublished",
          "icon",
          "description",
          "publicId",
          "customDomain",
          "workspaceId",
          "resultsTablePreferences",
          "isArchived",
          "isClosed",
          "domainId",
          "url",
          "whatsAppCredentialsId",
          "riskLevel",
          "sharing",
          "shareId"
        ],
        "title": "Agent V5"
      },
      "sharing": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "requirePassword": {
            "type": "boolean"
          },
          "password": {
            "type": "string"
          },
          "allowExport": {
            "type": "boolean"
          }
        },
        "title": "Sharing"
      },
      "publicAgentV6": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string",
            "enum": [
              "6"
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "agentId": {
            "type": "string"
          },
          "workspaceId": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "domainId": {
            "type": "string"
          },
          "publicId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/groupV6"
            }
          },
          "events": {
            "type": "array",
            "maxItems": 1,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/event"
                }
              ]
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "from": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "blockId": {
                          "type": "string"
                        },
                        "itemId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "blockId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "eventId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "eventId"
                      ]
                    }
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string"
                    },
                    "blockId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "groupId"
                  ]
                }
              },
              "required": [
                "id",
                "from",
                "to"
              ]
            }
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "isSessionVariable": {
                  "type": "boolean"
                },
                "value": {
                  "nullable": true,
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  ]
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          },
          "theme": {
            "$ref": "#/components/schemas/theme"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          }
        },
        "required": [
          "id",
          "name",
          "version",
          "createdAt",
          "updatedAt",
          "agentId",
          "workspaceId",
          "domain",
          "domainId",
          "publicId",
          "url",
          "groups",
          "events",
          "edges",
          "variables",
          "theme",
          "settings"
        ],
        "title": "Public Agent V6"
      },
      "publicAgentV5": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string",
            "enum": [
              "3",
              "4",
              "5"
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "agentId": {
            "type": "string"
          },
          "workspaceId": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "domainId": {
            "type": "string"
          },
          "publicId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "graphCoordinates": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "x",
                    "y"
                  ]
                },
                "blocks": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "outgoingEdgeId": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "start"
                            ]
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "label"
                        ]
                      },
                      {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/textBlock"
                          },
                          {
                            "$ref": "#/components/schemas/imageBlock"
                          },
                          {
                            "$ref": "#/components/schemas/videoBlock"
                          },
                          {
                            "$ref": "#/components/schemas/embedBlock"
                          },
                          {
                            "$ref": "#/components/schemas/audioBlock"
                          }
                        ],
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "text": "#/components/schemas/textBlock",
                            "image": "#/components/schemas/imageBlock",
                            "video": "#/components/schemas/videoBlock",
                            "embed": "#/components/schemas/embedBlock",
                            "audio": "#/components/schemas/audioBlock"
                          }
                        }
                      },
                      {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/textInput"
                          },
                          {
                            "$ref": "#/components/schemas/email"
                          },
                          {
                            "$ref": "#/components/schemas/address"
                          },
                          {
                            "$ref": "#/components/schemas/autocomplete"
                          },
                          {
                            "$ref": "#/components/schemas/numberInput"
                          },
                          {
                            "$ref": "#/components/schemas/url"
                          },
                          {
                            "$ref": "#/components/schemas/phoneNumberInput"
                          },
                          {
                            "$ref": "#/components/schemas/dateInput"
                          },
                          {
                            "$ref": "#/components/schemas/paymentInput"
                          },
                          {
                            "$ref": "#/components/schemas/rating"
                          },
                          {
                            "$ref": "#/components/schemas/buttonsInputV5"
                          },
                          {
                            "$ref": "#/components/schemas/fileInputV5"
                          },
                          {
                            "$ref": "#/components/schemas/pictureChoiceV5"
                          }
                        ],
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "text input": "#/components/schemas/textInput",
                            "email input": "#/components/schemas/email",
                            "address input": "#/components/schemas/address",
                            "autocomplete input": "#/components/schemas/autocomplete",
                            "number input": "#/components/schemas/numberInput",
                            "url input": "#/components/schemas/url",
                            "phone number input": "#/components/schemas/phoneNumberInput",
                            "date input": "#/components/schemas/dateInput",
                            "payment input": "#/components/schemas/paymentInput",
                            "rating input": "#/components/schemas/rating",
                            "choice input": "#/components/schemas/buttonsInputV5",
                            "file input": "#/components/schemas/fileInputV5",
                            "image choice": "#/components/schemas/pictureChoiceV5"
                          }
                        }
                      },
                      {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/scriptLogic"
                          },
                          {
                            "$ref": "#/components/schemas/redirectLogic"
                          },
                          {
                            "$ref": "#/components/schemas/setVariableLogic"
                          },
                          {
                            "$ref": "#/components/schemas/AgentLinkLogic"
                          },
                          {
                            "$ref": "#/components/schemas/waitLogic"
                          },
                          {
                            "$ref": "#/components/schemas/jumpLogic"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Condition"
                                ]
                              },
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "blockId": {
                                      "type": "string"
                                    },
                                    "outgoingEdgeId": {
                                      "type": "string"
                                    },
                                    "content": {
                                      "type": "object",
                                      "properties": {
                                        "logicalOperator": {
                                          "type": "string",
                                          "enum": [
                                            "OR",
                                            "AND"
                                          ]
                                        },
                                        "comparisons": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "variableId": {
                                                "type": "string"
                                              },
                                              "comparisonOperator": {
                                                "type": "string",
                                                "enum": [
                                                  "Equal to",
                                                  "Not equal",
                                                  "Contains",
                                                  "Does not contain",
                                                  "Greater than",
                                                  "Greater or equal to",
                                                  "Less than",
                                                  "Less or equal to",
                                                  "Is set",
                                                  "Is empty",
                                                  "Starts with",
                                                  "Ends with",
                                                  "Matches regex",
                                                  "Does not match regex"
                                                ]
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "items"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "AB test"
                                ]
                              },
                              "items": {
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2,
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "blockId": {
                                          "type": "string"
                                        },
                                        "outgoingEdgeId": {
                                          "type": "string"
                                        },
                                        "path": {
                                          "type": "string",
                                          "enum": [
                                            "a"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "path"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "blockId": {
                                          "type": "string"
                                        },
                                        "outgoingEdgeId": {
                                          "type": "string"
                                        },
                                        "path": {
                                          "type": "string",
                                          "enum": [
                                            "b"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "path"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "aPercent": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "items"
                            ]
                          }
                        ]
                      },
                      {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/chatwootBlock"
                          },
                          {
                            "$ref": "#/components/schemas/googleAnalyticsBlock"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "OpenAI"
                                ]
                              },
                              "options": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "baseUrl": {
                                        "type": "string"
                                      },
                                      "apiVersion": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "task": {
                                        "type": "string",
                                        "enum": [
                                          "Create chat completion"
                                        ]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "messages": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string",
                                                  "enum": [
                                                    "system",
                                                    "user",
                                                    "assistant"
                                                  ]
                                                },
                                                "content": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Messages sequence ✨"
                                                  ]
                                                },
                                                "content": {
                                                  "type": "object",
                                                  "properties": {
                                                    "assistantMessagesVariableId": {
                                                      "type": "string"
                                                    },
                                                    "userMessagesVariableId": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "role"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Dialogue"
                                                  ]
                                                },
                                                "dialogueVariableId": {
                                                  "type": "string"
                                                },
                                                "startsBy": {
                                                  "type": "string",
                                                  "enum": [
                                                    "user",
                                                    "assistant"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "role"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "advancedSettings": {
                                        "type": "object",
                                        "properties": {
                                          "temperature": {
                                            "anyOf": [
                                              {
                                                "type": "number"
                                              },
                                              {}
                                            ]
                                          }
                                        }
                                      },
                                      "responseMapping": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "valueToExtract": {
                                              "type": "string",
                                              "enum": [
                                                "Message content",
                                                "Total tokens"
                                              ]
                                            },
                                            "variableId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "valueToExtract"
                                          ]
                                        }
                                      },
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "baseUrl": {
                                        "type": "string"
                                      },
                                      "apiVersion": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "task"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "task": {
                                        "type": "string",
                                        "enum": [
                                          "Create image"
                                        ]
                                      },
                                      "prompt": {
                                        "type": "string"
                                      },
                                      "advancedOptions": {
                                        "type": "object",
                                        "properties": {
                                          "size": {
                                            "type": "string",
                                            "enum": [
                                              "256x256",
                                              "512x512",
                                              "1024x1024"
                                            ]
                                          }
                                        }
                                      },
                                      "responseMapping": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "valueToExtract": {
                                              "type": "string",
                                              "enum": [
                                                "Image URL"
                                              ]
                                            },
                                            "variableId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "valueToExtract"
                                          ]
                                        }
                                      },
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "baseUrl": {
                                        "type": "string"
                                      },
                                      "apiVersion": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "task",
                                      "advancedOptions",
                                      "responseMapping"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "baseUrl": {
                                        "type": "string"
                                      },
                                      "apiVersion": {
                                        "type": "string"
                                      },
                                      "task": {
                                        "type": "string",
                                        "enum": [
                                          "Create speech"
                                        ]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "input": {
                                        "type": "string"
                                      },
                                      "voice": {
                                        "type": "string",
                                        "enum": [
                                          "alloy",
                                          "echo",
                                          "fable",
                                          "onyx",
                                          "nova",
                                          "shimmer"
                                        ]
                                      },
                                      "saveUrlInVariableId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "task"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "$ref": "#/components/schemas/sendEmailBlock"
                          },
                          {
                            "$ref": "#/components/schemas/pixelBlock"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Google Sheets"
                                ]
                              },
                              "options": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "sheetId": {
                                        "type": "string"
                                      },
                                      "spreadsheetId": {
                                        "type": "string"
                                      },
                                      "action": {
                                        "type": "string",
                                        "enum": [
                                          "Get data from sheet"
                                        ]
                                      },
                                      "referenceCell": {
                                        "type": "object",
                                        "properties": {
                                          "column": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      },
                                      "filter": {
                                        "type": "object",
                                        "properties": {
                                          "comparisons": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "column": {
                                                  "type": "string"
                                                },
                                                "comparisonOperator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equal to",
                                                    "Not equal",
                                                    "Contains",
                                                    "Does not contain",
                                                    "Greater than",
                                                    "Greater or equal to",
                                                    "Less than",
                                                    "Less or equal to",
                                                    "Is set",
                                                    "Is empty",
                                                    "Starts with",
                                                    "Ends with",
                                                    "Matches regex",
                                                    "Does not match regex"
                                                  ]
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            }
                                          },
                                          "logicalOperator": {
                                            "type": "string",
                                            "enum": [
                                              "OR",
                                              "AND"
                                            ]
                                          }
                                        }
                                      },
                                      "cellsToExtract": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            },
                                            "variableId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "totalRowsToExtract": {
                                        "type": "string",
                                        "enum": [
                                          "All",
                                          "First",
                                          "Last",
                                          "Random"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "action"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "sheetId": {
                                        "type": "string"
                                      },
                                      "spreadsheetId": {
                                        "type": "string"
                                      },
                                      "action": {
                                        "type": "string",
                                        "enum": [
                                          "Insert a row"
                                        ]
                                      },
                                      "cellsToInsert": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "action"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "sheetId": {
                                        "type": "string"
                                      },
                                      "spreadsheetId": {
                                        "type": "string"
                                      },
                                      "action": {
                                        "type": "string",
                                        "enum": [
                                          "Update a row"
                                        ]
                                      },
                                      "cellsToUpsert": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "referenceCell": {
                                        "type": "object",
                                        "properties": {
                                          "column": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      },
                                      "filter": {
                                        "type": "object",
                                        "properties": {
                                          "comparisons": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "column": {
                                                  "type": "string"
                                                },
                                                "comparisonOperator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equal to",
                                                    "Not equal",
                                                    "Contains",
                                                    "Does not contain",
                                                    "Greater than",
                                                    "Greater or equal to",
                                                    "Less than",
                                                    "Less or equal to",
                                                    "Is set",
                                                    "Is empty",
                                                    "Starts with",
                                                    "Ends with",
                                                    "Matches regex",
                                                    "Does not match regex"
                                                  ]
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id"
                                              ]
                                            }
                                          },
                                          "logicalOperator": {
                                            "type": "string",
                                            "enum": [
                                              "OR",
                                              "AND"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "action"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "credentialsId": {
                                        "type": "string"
                                      },
                                      "sheetId": {
                                        "type": "string"
                                      },
                                      "spreadsheetId": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Make.com"
                                ]
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "variablesForTest": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "responseVariableMapping": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "bodyPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "isAdvancedConfig": {
                                    "type": "boolean"
                                  },
                                  "isCustomBody": {
                                    "type": "boolean"
                                  },
                                  "isExecutedOnClient": {
                                    "type": "boolean"
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "queryParams": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "POST",
                                          "GET",
                                          "PUT",
                                          "DELETE",
                                          "PATCH",
                                          "HEAD",
                                          "CONNECT",
                                          "OPTIONS",
                                          "TRACE"
                                        ]
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "body": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 120
                                  }
                                }
                              },
                              "webhookId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Pabbly"
                                ]
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "variablesForTest": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "responseVariableMapping": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "bodyPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "isAdvancedConfig": {
                                    "type": "boolean"
                                  },
                                  "isCustomBody": {
                                    "type": "boolean"
                                  },
                                  "isExecutedOnClient": {
                                    "type": "boolean"
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "queryParams": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "POST",
                                          "GET",
                                          "PUT",
                                          "DELETE",
                                          "PATCH",
                                          "HEAD",
                                          "CONNECT",
                                          "OPTIONS",
                                          "TRACE"
                                        ]
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "body": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 120
                                  }
                                }
                              },
                              "webhookId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Webhook"
                                ],
                                "description": "Legacy name for HTTP Request block"
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "variablesForTest": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "responseVariableMapping": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "bodyPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "isAdvancedConfig": {
                                    "type": "boolean"
                                  },
                                  "isCustomBody": {
                                    "type": "boolean"
                                  },
                                  "isExecutedOnClient": {
                                    "type": "boolean"
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "queryParams": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "POST",
                                          "GET",
                                          "PUT",
                                          "DELETE",
                                          "PATCH",
                                          "HEAD",
                                          "CONNECT",
                                          "OPTIONS",
                                          "TRACE"
                                        ]
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "body": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 120
                                  }
                                }
                              },
                              "webhookId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "outgoingEdgeId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Zapier"
                                ]
                              },
                              "options": {
                                "type": "object",
                                "properties": {
                                  "variablesForTest": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "responseVariableMapping": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "variableId": {
                                          "type": "string"
                                        },
                                        "bodyPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "isAdvancedConfig": {
                                    "type": "boolean"
                                  },
                                  "isCustomBody": {
                                    "type": "boolean"
                                  },
                                  "isExecutedOnClient": {
                                    "type": "boolean"
                                  },
                                  "webhook": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "queryParams": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "POST",
                                          "GET",
                                          "PUT",
                                          "DELETE",
                                          "PATCH",
                                          "HEAD",
                                          "CONNECT",
                                          "OPTIONS",
                                          "TRACE"
                                        ]
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "body": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 120
                                  }
                                }
                              },
                              "webhookId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "id",
                "title",
                "graphCoordinates",
                "blocks"
              ]
            }
          },
          "events": {
            "type": "array"
          },
          "edges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "from": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "blockId": {
                          "type": "string"
                        },
                        "itemId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "blockId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "eventId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "eventId"
                      ]
                    }
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string"
                    },
                    "blockId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "groupId"
                  ]
                }
              },
              "required": [
                "id",
                "from",
                "to"
              ]
            }
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "isSessionVariable": {
                  "type": "boolean"
                },
                "value": {
                  "nullable": true,
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  ]
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          },
          "theme": {
            "$ref": "#/components/schemas/theme"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          }
        },
        "required": [
          "id",
          "name",
          "version",
          "createdAt",
          "updatedAt",
          "agentId",
          "workspaceId",
          "domain",
          "domainId",
          "publicId",
          "url",
          "groups",
          "events",
          "edges",
          "variables",
          "theme",
          "settings"
        ],
        "title": "Public Agent V5"
      }
    }
  }
}